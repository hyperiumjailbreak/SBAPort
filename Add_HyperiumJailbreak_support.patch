Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/FontRendererHook.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/FontRendererHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/FontRendererHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,30 +0,0 @@
-package codes.biscuit.skyblockaddons.asm.hooks;
-
-import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.misc.ChromaManager;
-import net.minecraft.client.Minecraft;
-import net.minecraft.client.gui.FontRenderer;
-import net.minecraft.client.renderer.GlStateManager;
-
-import java.awt.*;
-
-public class FontRendererHook {
-
-    public static void changeTextColor() {
-        if (ChromaManager.isColoringTextChroma()) {
-            FontRenderer fontRenderer = Minecraft.getMinecraft().fontRendererObj;
-
-            float[] HSB = Color.RGBtoHSB((int)(fontRenderer.red * 255), (int)(fontRenderer.green * 255), (int)(fontRenderer.blue * 255), null);
-
-            float chromaWidth = (SkyblockAddons.getInstance().getUtils().denormalizeScale(SkyblockAddons.getInstance().getConfigValues().getChromaFadeWidth(), 1, 42, 1)/360) % 1F;
-            int newColorRGB = Color.HSBtoRGB(HSB[0] + chromaWidth, HSB[1], HSB[2]);
-
-            fontRenderer.red = (float)(newColorRGB >> 16 & 255) / 255.0F;
-            fontRenderer.green = (float)(newColorRGB >> 8 & 255) / 255.0F;
-            fontRenderer.blue = (float)(newColorRGB & 255) / 255.0F;
-
-            // Swap blue & green because they are swapped in FontRenderer's color model.
-            GlStateManager.color(fontRenderer.red, fontRenderer.blue, fontRenderer.green, fontRenderer.alpha);
-        }
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiDisconnectedHook.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiDisconnectedHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiDisconnectedHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,14 +0,0 @@
-package codes.biscuit.skyblockaddons.asm.hooks;
-
-import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.features.discordrpc.DiscordRPCManager;
-
-public class GuiDisconnectedHook {
-
-    public static void onDisconnect() {
-        DiscordRPCManager discordRPCManager = SkyblockAddons.getInstance().getDiscordRPCManager();
-        if (discordRPCManager.isActive()) {
-            discordRPCManager.stop();
-        }
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/RenderItemHook.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/RenderItemHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/RenderItemHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,45 +0,0 @@
-package codes.biscuit.skyblockaddons.asm.hooks;
-
-import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.core.Feature;
-import net.minecraft.client.Minecraft;
-import net.minecraft.client.renderer.GlStateManager;
-import net.minecraft.client.renderer.texture.TextureManager;
-import net.minecraft.client.renderer.texture.TextureMap;
-import net.minecraft.client.resources.model.IBakedModel;
-import net.minecraft.init.Items;
-import net.minecraft.item.ItemStack;
-import net.minecraft.util.ResourceLocation;
-
-public class RenderItemHook {
-
-    private static final ResourceLocation BLANK = new ResourceLocation("skyblockaddons","blank.png");
-
-    public static void renderToxicArrowPoisonEffect(IBakedModel model, ItemStack stack) {
-        SkyblockAddons main = SkyblockAddons.getInstance();
-
-        if (main.getUtils().isOnSkyblock() && main.getConfigValues().isEnabled(Feature.TURN_BOW_GREEN_WHEN_USING_TOXIC_ARROW_POISON)
-                && main.getInventoryUtils().isUsingToxicArrowPoison() && Items.bow.equals(stack.getItem()) && main.getUtils().itemIsInHotbar(stack)) {
-            TextureManager textureManager = Minecraft.getMinecraft().getTextureManager();
-
-            GlStateManager.depthMask(false);
-            GlStateManager.depthFunc(514);
-            GlStateManager.disableLighting();
-            GlStateManager.blendFunc(768, 1);
-            textureManager.bindTexture(BLANK);
-            GlStateManager.matrixMode(5890);
-
-            GlStateManager.pushMatrix();
-
-            Minecraft.getMinecraft().getRenderItem().renderModel(model, 0x201cba41);
-            GlStateManager.popMatrix();
-
-            GlStateManager.matrixMode(5888);
-            GlStateManager.blendFunc(770, 771);
-            GlStateManager.enableLighting();
-            GlStateManager.depthFunc(515);
-            GlStateManager.depthMask(true);
-            textureManager.bindTexture(TextureMap.locationBlocksTexture);
-        }
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/TileEntityEnderChestRendererHook.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/TileEntityEnderChestRendererHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/TileEntityEnderChestRendererHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,41 +0,0 @@
-package codes.biscuit.skyblockaddons.asm.hooks;
-
-import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.core.Feature;
-import codes.biscuit.skyblockaddons.core.Location;
-import codes.biscuit.skyblockaddons.utils.ColorCode;
-import net.minecraft.client.Minecraft;
-import net.minecraft.client.renderer.GlStateManager;
-import net.minecraft.client.renderer.tileentity.TileEntityEnderChestRenderer;
-import net.minecraft.util.ResourceLocation;
-
-import java.awt.*;
-
-public class TileEntityEnderChestRendererHook {
-
-    private static final ResourceLocation BLANK_ENDERCHEST = new ResourceLocation("skyblockaddons", "blankenderchest.png");
-
-    public static void bindTexture(TileEntityEnderChestRenderer tileEntityEnderChestRenderer, ResourceLocation enderChestTexture) {
-        SkyblockAddons main = SkyblockAddons.getInstance();
-
-        if (main.getUtils().isOnSkyblock() && Minecraft.getMinecraft().currentScreen == null && main.getConfigValues().isEnabled(Feature.MAKE_ENDERCHESTS_GREEN_IN_END) &&
-                (main.getUtils().getLocation() == Location.THE_END || main.getUtils().getLocation() == Location.DRAGONS_NEST)) {
-            tileEntityEnderChestRenderer.bindTexture(BLANK_ENDERCHEST);
-        } else {
-            tileEntityEnderChestRenderer.bindTexture( enderChestTexture);
-        }
-    }
-
-    public static void setEnderchestColor() {
-        SkyblockAddons main = SkyblockAddons.getInstance();
-        if (main.getUtils().isOnSkyblock() && Minecraft.getMinecraft().currentScreen == null && main.getConfigValues().isEnabled(Feature.MAKE_ENDERCHESTS_GREEN_IN_END) &&
-                main.getUtils().getLocation() == Location.DRAGONS_NEST) {
-            Color color = main.getConfigValues().getColor(Feature.MAKE_ENDERCHESTS_GREEN_IN_END);
-            if (color.getRGB() == ColorCode.GREEN.getRGB()) {
-                GlStateManager.color(0, 1, 0); // classic lime green
-            } else {
-                GlStateManager.color((float)color.getRed()/255, (float)color.getGreen()/255, (float)color.getBlue()/255);
-            }
-        }
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/FontRendererTransformer.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/FontRendererTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/FontRendererTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,55 +0,0 @@
-package codes.biscuit.skyblockaddons.asm;
-
-import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
-import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
-import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
-
-import java.util.Iterator;
-
-public class FontRendererTransformer implements ITransformer {
-
-    /**
-     * {@link net.minecraft.client.gui.FontRenderer}
-     */
-    @Override
-    public String[] getClassName() {
-        return new String[]{TransformerClass.FontRenderer.getTransformerName(), "club.sk1er.patcher.hooks.FontRendererHook"};
-    }
-
-    @Override
-    public void transform(ClassNode classNode, String name) {
-        for (MethodNode methodNode : classNode.methods) {
-
-            // Objective:
-            // Find:
-            //   return (float value)
-            // Change to:
-            //   float f4 = (float value)
-            //   FontRendererHook.changeTextColor(); <- insert the call right before the return
-            //   return f4;
-
-            if (TransformerMethod.renderChar.matches(methodNode) || methodNode.name.equals("renderChar")) {
-                Iterator<AbstractInsnNode> iterator = methodNode.instructions.iterator();
-                while (iterator.hasNext()) {
-                    AbstractInsnNode abstractNode = iterator.next();
-
-                    if (abstractNode.getOpcode() == Opcodes.FRETURN) {
-                        methodNode.instructions.insertBefore(abstractNode, insertChangeTextColor());
-                    }
-                }
-            }
-        }
-    }
-
-    private InsnList insertChangeTextColor() {
-        InsnList list = new InsnList();
-
-        list.add(new VarInsnNode(Opcodes.FSTORE, 4)); // Store it in a variable for now.
-        list.add(new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/FontRendererHook", "changeTextColor", "()V", false));
-        list.add(new VarInsnNode(Opcodes.FLOAD, 4)); // Call back the stored variable to return it.
-
-        return list;
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/GuiDisconnectedTransformer.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/GuiDisconnectedTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/GuiDisconnectedTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,42 +0,0 @@
-package codes.biscuit.skyblockaddons.asm;
-
-import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
-import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
-import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
-
-import java.util.Iterator;
-
-public class GuiDisconnectedTransformer implements ITransformer {
-
-    /**
-     * {@link net.minecraft.client.gui.GuiDisconnected}
-     */
-    @Override
-    public String[] getClassName() {
-        return new String[]{TransformerClass.GuiDisconnected.getTransformerName()};
-    }
-
-    @Override
-    public void transform(ClassNode classNode, String name) {
-        for (MethodNode methodNode : classNode.methods) {
-            if (TransformerMethod.init.matches(methodNode)) {
-
-                // Objective:
-                // Find: Constructor return.
-                // Insert: GuiDisconnectedHook.onDisconnect();
-
-                Iterator<AbstractInsnNode> iterator = methodNode.instructions.iterator();
-                while (iterator.hasNext()) {
-                    AbstractInsnNode abstractNode = iterator.next();
-                    if (abstractNode instanceof InsnNode && abstractNode.getOpcode() == Opcodes.RETURN) {
-                        methodNode.instructions.insertBefore(abstractNode, new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/GuiDisconnectedHook",
-                                "onDisconnect", "()V", false)); // GuiDisconnectedHook.onDisconnect();
-                        break;
-                    }
-                }
-            }
-        }
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/GuiIngameCustomTransformer.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/GuiIngameCustomTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/GuiIngameCustomTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,123 +0,0 @@
-package codes.biscuit.skyblockaddons.asm;
-
-import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
-import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
-
-import java.util.Iterator;
-
-public class GuiIngameCustomTransformer implements ITransformer {
-
-    private boolean foundHealthBlock;
-    private boolean foundFoodBlock;
-
-    private boolean doneHealth;
-    private boolean doneFood;
-    private boolean doneArmor;
-    private boolean doneMountHealth;
-
-    /**
-     * Labymod: net.labymod.core_implementation.mc18.gui.GuiIngameCustom
-     */
-    @Override
-    public String[] getClassName() {
-        return new String[]{"net.labymod.core_implementation.mc18.gui.GuiIngameCustom"};
-    }
-
-    @Override
-    public void transform(ClassNode classNode, String name) {
-        for (MethodNode methodNode : classNode.methods) {
-            if (methodNode.name.equals("renderPlayerStatsNew")) {
-
-                Iterator<AbstractInsnNode> iterator = methodNode.instructions.iterator();
-                while (iterator.hasNext()) {
-                    AbstractInsnNode abstractNode = iterator.next();
-
-                    if (abstractNode instanceof LdcInsnNode) {
-                        LdcInsnNode ldcInsnNode = (LdcInsnNode) abstractNode;
-                        if (!doneArmor && "armor".equals(ldcInsnNode.cst)) {
-                            methodNode.instructions.insert(ldcInsnNode.getNext(), insertCancelArmorRendering());
-                            doneArmor = true;
-
-                        } else if ("health".equals(ldcInsnNode.cst)) {
-                            foundHealthBlock = true;
-
-                        } else if ("food".equals(ldcInsnNode.cst)) {
-                            foundFoodBlock = true;
-
-                        }
-                    }
-
-                    if (abstractNode instanceof JumpInsnNode) {
-                        JumpInsnNode jumpInsnNode = (JumpInsnNode) abstractNode;
-                        if (!doneHealth && foundHealthBlock && abstractNode.getOpcode() == Opcodes.IFLT) {
-                            doneHealth = true;
-                            methodNode.instructions.insert(abstractNode, insertCancelHealthRendering(jumpInsnNode.label));
-                        }
-
-                        if (!doneFood && abstractNode.getOpcode() == Opcodes.IFNONNULL) {
-                            doneFood = true;
-                            methodNode.instructions.insert(abstractNode, insertCancelFoodRendering(jumpInsnNode.label));
-                        }
-                    }
-
-                    if (!doneMountHealth && foundFoodBlock && abstractNode instanceof TypeInsnNode && abstractNode.getOpcode() == Opcodes.INSTANCEOF) {
-                        TypeInsnNode typeInsnNode = (TypeInsnNode) abstractNode;
-
-                        if (typeInsnNode.desc.equals(TransformerClass.EntityLivingBase.getNameRaw()) &&
-                                typeInsnNode.getNext().getOpcode() == Opcodes.IFEQ && typeInsnNode.getNext() instanceof JumpInsnNode) {
-                            JumpInsnNode jumpInsnNode = (JumpInsnNode) typeInsnNode.getNext();
-
-                            doneMountHealth = true;
-                            methodNode.instructions.insert(jumpInsnNode, insertCancelMountHealthRendering(jumpInsnNode.label));
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    private InsnList insertCancelArmorRendering() {
-        InsnList list = new InsnList();
-
-        list.add(new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/GuiIngameCustomHook", "shouldRenderArmor", "()Z", false));
-
-        LabelNode notCancelled = new LabelNode(); // if (!GuiIngameCustomHook.shouldRenderArmor())
-        list.add(new JumpInsnNode(Opcodes.IFNE, notCancelled));
-
-        list.add(new InsnNode(Opcodes.ICONST_0));
-        list.add(new VarInsnNode(Opcodes.ISTORE, 22)); // k2 = 0;
-
-        list.add(notCancelled); // }
-
-        return list;
-    }
-
-    private InsnList insertCancelHealthRendering(LabelNode label) {
-        InsnList list = new InsnList();
-
-        list.add(new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/GuiIngameCustomHook", "shouldRenderHealth", "()Z", false));
-        list.add(new JumpInsnNode(Opcodes.IFEQ, label)); // && shouldRenderHealth()
-
-        return list;
-    }
-
-    private InsnList insertCancelFoodRendering(LabelNode label) {
-        InsnList list = new InsnList();
-
-        list.add(new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/GuiIngameCustomHook", "shouldRenderFood", "()Z", false));
-        list.add(new JumpInsnNode(Opcodes.IFEQ, label));  // && shouldRenderFood()
-
-        return list;
-    }
-
-    private InsnList insertCancelMountHealthRendering(LabelNode label) {
-        InsnList list = new InsnList();
-
-        list.add(new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/GuiIngameCustomHook", "shouldRenderMountHealth", "()Z", false));
-        list.add(new JumpInsnNode(Opcodes.IFEQ, label));  // && shouldRenderMountHealth()
-
-        return list;
-    }
-}
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/asm/GuiNewChatTransformer.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/GuiNewChatTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/GuiNewChatTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,50 +0,0 @@
-package codes.biscuit.skyblockaddons.asm;
-
-import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
-import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
-import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.AbstractInsnNode;
-import org.objectweb.asm.tree.ClassNode;
-import org.objectweb.asm.tree.MethodInsnNode;
-import org.objectweb.asm.tree.MethodNode;
-
-import java.util.Iterator;
-
-public class GuiNewChatTransformer implements ITransformer {
-
-    /**
-     * {@link net.minecraft.client.gui.GuiNewChat}
-     */
-    @Override
-    public String[] getClassName() {
-        return new String[]{TransformerClass.GuiNewChat.getTransformerName()};
-    }
-
-    @Override
-    public void transform(ClassNode classNode, String name) {
-        for (MethodNode methodNode : classNode.methods) {
-            if (TransformerMethod.printChatMessageWithOptionalDeletion.matches(methodNode)) {
-
-                // Objective:
-                // Find: chatComponent.getUnformattedText();
-                // Replace With: GuiNewChatHook.getUnformattedText(chatComponent);
-
-                Iterator<AbstractInsnNode> iterator = methodNode.instructions.iterator();
-                while (iterator.hasNext()) {
-                    AbstractInsnNode abstractNode = iterator.next();
-                    if (abstractNode instanceof MethodInsnNode && abstractNode.getOpcode() == Opcodes.INVOKEINTERFACE) {
-                        MethodInsnNode methodInsnNode = (MethodInsnNode) abstractNode;
-                        if (methodInsnNode.owner.equals(TransformerClass.IChatComponent.getNameRaw()) && TransformerMethod.getUnformattedText.matches(methodInsnNode)) {
-                            methodNode.instructions.insertBefore(abstractNode, new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/GuiNewChatHook",
-                                    "getUnformattedText", "("+TransformerClass.IChatComponent.getName()+")Ljava/lang/String;", false)); // GuiNewChatHook.getUnformattedText(chatComponent);
-
-                            iterator.remove(); // Remove the old line.
-                            break;
-                        }
-                    }
-                }
-            }
-        }
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/RenderItemTransformer.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/RenderItemTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/RenderItemTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,54 +0,0 @@
-package codes.biscuit.skyblockaddons.asm;
-
-import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
-import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
-import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
-
-import java.util.Iterator;
-
-public class RenderItemTransformer implements ITransformer {
-
-    /**
-     * {@link net.minecraft.client.renderer.entity.RenderItem}
-     */
-    @Override
-    public String[] getClassName() {
-        return new String[]{TransformerClass.RenderItem.getTransformerName()};
-    }
-
-    @Override
-    public void transform(ClassNode classNode, String name) {
-        for (MethodNode methodNode : classNode.methods) {
-
-
-            // Objective:
-            //
-            // Find:
-            //   this.renderItem(stack, model);
-            //
-            // Add after:
-            //   RenderItemHook.renderToxicArrowPoisonEffect(model, stack);
-
-            if (TransformerMethod.renderItem.matches(methodNode)) {
-                Iterator<AbstractInsnNode> iterator = methodNode.instructions.iterator();
-                while (iterator.hasNext()) {
-                    AbstractInsnNode abstractNode = iterator.next();
-
-                    if (abstractNode instanceof MethodInsnNode && abstractNode.getOpcode() == Opcodes.INVOKESPECIAL) {
-                        MethodInsnNode methodInsnNode = (MethodInsnNode)abstractNode;
-
-                        if (methodInsnNode.owner.equals(TransformerClass.RenderItem.getNameRaw()) &&
-                                TransformerMethod.renderModel_RenderItem.matches(methodInsnNode)) {
-                            methodNode.instructions.insert(abstractNode, new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/RenderItemHook",
-                                    "renderToxicArrowPoisonEffect", "("+TransformerClass.IBakedModel.getName()+TransformerClass.ItemStack.getName()+")V", false));
-                            methodNode.instructions.insert(abstractNode, new VarInsnNode(Opcodes.ALOAD, 1));
-                            methodNode.instructions.insert(abstractNode, new VarInsnNode(Opcodes.ALOAD, 2));
-                        }
-                    }
-                }
-            }
-        }
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/TileEntityEnderChestRendererTransformer.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/TileEntityEnderChestRendererTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/TileEntityEnderChestRendererTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,71 +0,0 @@
-package codes.biscuit.skyblockaddons.asm;
-
-import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
-import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
-import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
-
-import java.util.Iterator;
-
-public class TileEntityEnderChestRendererTransformer implements ITransformer {
-
-    /**
-     * {@link net.minecraft.client.renderer.tileentity.TileEntityEnderChestRenderer}
-     */
-    @Override
-    public String[] getClassName() {
-        return new String[]{TransformerClass.TileEntityEnderChestRenderer.getTransformerName()};
-    }
-
-    @Override
-    public void transform(ClassNode classNode, String name) {
-        for (MethodNode methodNode : classNode.methods) {
-            if (TransformerMethod.renderTileEntityAt.matches(methodNode)) {
-
-                // Objective:
-                // Find: this.bindTexture(ENDER_CHEST_TEXTURE);
-                // Replacement: TileEntityEnderChestRendererHook.bindTexture(this, (ResourceLocation)ENDER_CHEST_TEXTURE);
-
-                // Objective:
-                // Find: this.field_147521_c.renderAll();
-                // Insert 2 lines before: TileEntityEnderChestRendererHook.setEnderchestColor();
-
-                int bindTextureCount = 0;
-
-                Iterator<AbstractInsnNode> iterator = methodNode.instructions.iterator();
-
-                while (iterator.hasNext()) {
-                    AbstractInsnNode abstractNode = iterator.next();
-
-                    if (abstractNode instanceof MethodInsnNode && abstractNode.getOpcode() == Opcodes.INVOKEVIRTUAL) {
-                        MethodInsnNode methodInsnNode = (MethodInsnNode)abstractNode;
-                        if (methodInsnNode.owner.equals(TransformerClass.TileEntityEnderChestRenderer.getNameRaw())
-                                && TransformerMethod.bindTexture.matches(methodInsnNode)) { // TileEntityEnderChestRendererHook.bindTexture(ENDER_CHEST_TEXTURE);
-                            if (bindTextureCount == 1) { // Find the second statement, not the first one.
-                                methodNode.instructions.insertBefore(abstractNode, new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/TileEntityEnderChestRendererHook",
-                                        // Add TileEntityEnderChestRendererHook.bindTexture(this, (ResourceLocation)ENDER_CHEST_TEXTURE);
-                                        "bindTexture", "("+TransformerClass.TileEntityEnderChestRenderer.getName()+TransformerClass.ResourceLocation.getName()+")V", false));
-                                iterator.remove(); // Remove the old method call.
-                            }
-                            bindTextureCount++;
-                        } else if (methodInsnNode.owner.equals(TransformerClass.ModelChest.getNameRaw())
-                                && TransformerMethod.renderAll.matches(methodInsnNode)) { // The two lines are to make sure its before the "this" & the "field_147521_c".
-                            methodNode.instructions.insertBefore(methodNode.instructions.get(methodNode.instructions.indexOf(abstractNode)-2), insertChangeEnderchestColor());
-                        }
-                    }
-                }
-                break;
-            }
-        }
-    }
-
-    private InsnList insertChangeEnderchestColor() {
-        InsnList list = new InsnList();
-
-        list.add(new MethodInsnNode(Opcodes.INVOKESTATIC, "codes/biscuit/skyblockaddons/asm/hooks/TileEntityEnderChestRendererHook", "setEnderchestColor",
-                "()V", false)); // TileEntityEnderChestRendererHook.setEnderchestColor();
-
-        return list;
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/features/discordrpc/DiscordRPCManager.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/features/discordrpc/DiscordRPCManager.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/features/discordrpc/DiscordRPCManager.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,137 +0,0 @@
-package codes.biscuit.skyblockaddons.features.discordrpc;
-
-import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.core.Location;
-import codes.biscuit.skyblockaddons.core.SkyblockDate;
-import codes.biscuit.skyblockaddons.utils.EnumUtils;
-import com.jagrosh.discordipc.IPCClient;
-import com.jagrosh.discordipc.IPCListener;
-import com.jagrosh.discordipc.entities.RichPresence;
-import lombok.Getter;
-import lombok.Setter;
-import org.apache.logging.log4j.Logger;
-import org.json.JSONObject;
-
-import java.time.OffsetDateTime;
-import java.util.Timer;
-import java.util.TimerTask;
-
-public class DiscordRPCManager implements IPCListener {
-
-    @Getter @Setter private EnumUtils.DiscordStatusEntry currentEntry;
-
-    private static final long APPLICATION_ID = 653443797182578707L;
-    private static final long UPDATE_PERIOD = 4200L;
-
-    private SkyblockAddons main = SkyblockAddons.getInstance();
-    private Logger logger = main.getLogger();
-    private IPCClient client;
-    private DiscordStatus detailsLine;
-    private DiscordStatus stateLine;
-    private OffsetDateTime startTimestamp;
-
-    private Timer updateTimer;
-    private boolean connected;
-
-    public void start() {
-        try {
-            logger.info("Starting Discord RP...");
-            if (isActive()) {
-                return;
-            }
-
-            stateLine = main.getConfigValues().getDiscordStatus();
-            detailsLine = main.getConfigValues().getDiscordDetails();
-            startTimestamp = OffsetDateTime.now();
-            client = new IPCClient(APPLICATION_ID);
-            client.setListener(this);
-            try {
-                client.connect();
-            } catch (Exception e) {
-                logger.warn("Failed to connect to Discord RPC: " + e.getMessage());
-            }
-        } catch (Throwable ex) {
-            logger.error("DiscordRP has thrown an unexpected error while trying to start...");
-            ex.printStackTrace();
-        }
-    }
-
-    public void stop() {
-        if (isActive()) {
-            client.close();
-            connected = false;
-        }
-    }
-
-    public boolean isActive() {
-        return client != null && connected;
-    }
-
-    public void updatePresence() {
-        Location location = SkyblockAddons.getInstance().getUtils().getLocation();
-        SkyblockDate skyblockDate = SkyblockAddons.getInstance().getUtils().getCurrentDate();
-        String skyblockDateString = skyblockDate != null ? skyblockDate.toString() : "";
-
-        // Early Winter 10th, 12:10am - Village
-        String largeImageDescription = String.format("%s - %s", skyblockDateString, location.getScoreboardName());
-        String smallImageDescription = String.format("Using SkyblockAddons v%s", SkyblockAddons.VERSION+" by Biscuit | Icons by Hypixel Packs HQ");
-        RichPresence presence = new RichPresence.Builder()
-                .setState(stateLine.getDisplayString(EnumUtils.DiscordStatusEntry.STATE))
-                .setDetails(detailsLine.getDisplayString(EnumUtils.DiscordStatusEntry.DETAILS))
-                .setStartTimestamp(startTimestamp)
-                .setLargeImage(location.getDiscordIconKey(), largeImageDescription)
-                .setSmallImage("skyblockicon", smallImageDescription)
-                .build();
-        client.sendRichPresence(presence);
-    }
-
-    public void setStateLine(DiscordStatus status) {
-        this.stateLine = status;
-        if (isActive()) {
-            updatePresence();
-        }
-    }
-
-    public void setDetailsLine(DiscordStatus status) {
-        this.detailsLine = status;
-        if (isActive()) {
-            updatePresence();
-        }
-    }
-
-    @Override
-    public void onReady(IPCClient client) {
-        logger.info("Discord RPC started");
-        connected = true;
-        updateTimer = new Timer();
-        updateTimer.schedule(new TimerTask() {
-            @Override
-            public void run() {
-                updatePresence();
-            }
-        }, 0, UPDATE_PERIOD);
-    }
-
-    @Override
-    public void onClose(IPCClient client, JSONObject json) {
-        logger.info("Discord RPC closed");
-        this.client = null;
-        connected = false;
-        cancelTimer();
-    }
-
-    @Override
-    public void onDisconnect(IPCClient client, Throwable t) {
-        logger.warn("Discord RPC disconnected");
-        this.client = null;
-        connected = false;
-        cancelTimer();
-    }
-
-    private void cancelTimer() {
-        if(updateTimer != null) {
-            updateTimer.cancel();
-            updateTimer = null;
-        }
-    }
-}
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/features/discordrpc/DiscordStatus.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/features/discordrpc/DiscordStatus.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/features/discordrpc/DiscordStatus.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,110 +0,0 @@
-package codes.biscuit.skyblockaddons.features.discordrpc;
-
-import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.core.Attribute;
-import codes.biscuit.skyblockaddons.core.Location;
-import codes.biscuit.skyblockaddons.core.Message;
-import codes.biscuit.skyblockaddons.core.SkyblockDate;
-import codes.biscuit.skyblockaddons.gui.buttons.ButtonSelect;
-import codes.biscuit.skyblockaddons.utils.EnumUtils;
-import codes.biscuit.skyblockaddons.utils.TextUtils;
-import net.minecraft.client.Minecraft;
-import net.minecraft.client.entity.EntityPlayerSP;
-
-import java.util.function.Supplier;
-
-/**
- * Statuses that are shown on the Discord RPC feature
- *
- * This file has LF line endings because ForgeGradle is weird and will throw a NullPointerException if it's CRLF.
- */
-public enum DiscordStatus implements ButtonSelect.SelectItem {
-
-    NONE(Message.DISCORD_STATUS_NONE_TITLE, Message.DISCORD_STATUS_NONE_DESCRIPTION, () -> null),
-    LOCATION(Message.DISCORD_STATUS_LOCATION_TITLE, Message.DISCORD_STATUS_LOCATION_DESCRIPTION,
-            () -> SkyblockAddons.getInstance().getUtils().getLocation().getScoreboardName()),
-
-    PURSE(Message.DISCORD_STATUS_PURSE_TITLE, Message.DISCORD_STATUS_PURSE_DESCRIPTION,
-            () -> String.format("%s Coins", TextUtils.formatDouble(SkyblockAddons.getInstance().getUtils().getPurse()))),
-
-    STATS(Message.DISCORD_STATUS_STATS_TITLE, Message.DISCORD_STATUS_STATS_DESCRIPTION,
-            () -> {
-                int health = SkyblockAddons.getInstance().getUtils().getAttributes().get(Attribute.HEALTH).getValue();
-                int defense = SkyblockAddons.getInstance().getUtils().getAttributes().get(Attribute.DEFENCE).getValue();
-                int mana = SkyblockAddons.getInstance().getUtils().getAttributes().get(Attribute.MANA).getValue();
-//                return String.format("%d\u2764 %d\u2748 %d\u270E", health, defense, mana);
-                return String.format("%d H - %d D - %d M", health, defense, mana);
-            }),
-
-    ZEALOTS(Message.DISCORD_STATUS_ZEALOTS_TITLE, Message.DISCORD_STATUS_ZEALOTS_DESCRIPTION,
-            () -> String.format("%d Zealots killed", SkyblockAddons.getInstance().getPersistentValues().getKills())),
-
-    ITEM(Message.DISCORD_STATUS_ITEM_TITLE, Message.DISCORD_STATUS_ITEM_DESCRIPTION,
-            () -> {
-                final EntityPlayerSP player = Minecraft.getMinecraft().thePlayer;
-                if(player != null && player.getHeldItem() != null) {
-                    return String.format("Holding %s", TextUtils.stripColor(player.getHeldItem().getDisplayName()));
-                }
-                return "No item in hand";
-            }),
-
-    TIME(Message.DISCORD_STATUS_TIME_TITLE, Message.DISCORD_STATUS_TIME_DESCRIPTION,
-            () -> {
-                final SkyblockDate date = SkyblockAddons.getInstance().getUtils().getCurrentDate();
-                return date != null ? date.toString() : "";
-            }),
-
-    PROFILE(Message.DISCORD_STATUS_PROFILE_TITLE, Message.DISCORD_STATUS_PROFILE_DESCRIPTION,
-            () -> {
-                String profile = SkyblockAddons.getInstance().getUtils().getProfileName();
-                return String.format("Profile: %s", profile == null ? "None" : profile);
-            }),
-
-    CUSTOM(Message.DISCORD_STATUS_CUSTOM, Message.DISCORD_STATUS_CUSTOM_DESCRIPTION,
-            () -> {
-                SkyblockAddons main = SkyblockAddons.getInstance();
-
-                String text = main.getConfigValues().getCustomStatus(main.getDiscordRPCManager().getCurrentEntry());
-                return text.substring(0, Math.min(text.length(), 100));
-            }),
-
-    AUTO_STATUS(Message.DISCORD_STATUS_AUTO, Message.DISCORD_STATUS_AUTO_DESCRIPTION, () -> {
-                SkyblockAddons main = SkyblockAddons.getInstance();
-                Location location = main.getUtils().getLocation();
-
-                if (location == Location.THE_END || location == Location.DRAGONS_NEST) {
-                    return DiscordStatus.ZEALOTS.displayMessageSupplier.get();
-                }
-
-                if ("AUTO_STATUS".equals(main.getConfigValues().getDiscordAutoDefault().name())) { // Avoid self reference.
-                    main.getConfigValues().setDiscordAutoDefault(DiscordStatus.NONE);
-                }
-                return main.getConfigValues().getDiscordAutoDefault().displayMessageSupplier.get();
-            })
-    ;
-
-    private final Message title;
-    private final Message description;
-    private final Supplier<String> displayMessageSupplier;
-
-    DiscordStatus(Message title, Message description, Supplier<String> displayMessageSupplier) {
-        this.title = title;
-        this.description = description;
-        this.displayMessageSupplier = displayMessageSupplier;
-    }
-
-    public String getDisplayString(EnumUtils.DiscordStatusEntry currentEntry) {
-        SkyblockAddons.getInstance().getDiscordRPCManager().setCurrentEntry(currentEntry);
-        return displayMessageSupplier.get();
-    }
-
-    @Override
-    public String getName() {
-        return title.getMessage();
-    }
-
-    @Override
-    public String getDescription() {
-        return description.getMessage();
-    }
-}
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/misc/SkyblockKeyBinding.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/misc/SkyblockKeyBinding.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/misc/SkyblockKeyBinding.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,21 +0,0 @@
-package codes.biscuit.skyblockaddons.misc;
-
-import codes.biscuit.skyblockaddons.core.Message;
-import lombok.Getter;
-import lombok.Setter;
-import net.minecraft.client.settings.KeyBinding;
-
-@Getter
-public class SkyblockKeyBinding {
-
-    @Setter private KeyBinding keyBinding;
-    private String name;
-    private int defaultKey;
-    private Message message;
-
-    public SkyblockKeyBinding(String name, int defaultKey, Message message) {
-        this.name = name;
-        this.defaultKey = defaultKey;
-        this.message = message;
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/misc/Updater.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/misc/Updater.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/misc/Updater.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,136 +0,0 @@
-package codes.biscuit.skyblockaddons.misc;
-
-import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.core.Message;
-import lombok.Getter;
-import net.minecraft.event.ClickEvent;
-import net.minecraft.event.HoverEvent;
-import net.minecraft.util.ChatComponentText;
-import net.minecraftforge.common.ForgeVersion;
-import net.minecraftforge.fml.common.versioning.ComparableVersion;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-import static net.minecraftforge.common.ForgeVersion.Status.*;
-
-/**
- * This class is the SkyblockAddons updater. It reads the Forge Update Checker results for SkyblockAddons.
- */
-public class Updater {
-
-    private static final Logger LOGGER = LogManager.getLogger(SkyblockAddons.MOD_NAME + " Updater");
-    private static final Pattern VERSION_PATTERN = Pattern.compile("(?<major>[0-9])\\.(?<minor>[0-9])\\.(?<patch>[0-9]).*");
-
-    private SkyblockAddons main = SkyblockAddons.getInstance();
-
-    private boolean hasUpdate = false;
-    @Getter private String messageToRender;
-
-    private boolean isPatch = false;
-    private boolean sentUpdateMessage = false;
-
-    /**
-     * Returns whether there is an update available
-     *
-     * @return {@code true} if there is an update available, false otherwise.
-     */
-    public boolean hasUpdate() {
-        return hasUpdate;
-    }
-
-    /**
-     * Processes the update checker result from the Forge Update Checker and sets the correct message to be displayed.
-     */
-    public void processUpdateCheckResult() {
-        SkyblockAddons main = SkyblockAddons.getInstance();
-
-        ComparableVersion current = new ComparableVersion(SkyblockAddons.VERSION);
-        boolean isCurrentBeta = SkyblockAddons.VERSION.contains("b");
-        ComparableVersion latest = new ComparableVersion(isCurrentBeta ? main.getOnlineData().getLatestBeta() : main.getOnlineData().getLatestVersion());
-        LOGGER.info("Checking to see if an update is available. Current version is "+current.toString()+". Latest version is "+latest.toString());
-
-        ForgeVersion.Status status;
-        int versionDifference = latest.compareTo(current);
-        if (versionDifference == 0) {
-            status = UP_TO_DATE;
-        } else if (versionDifference < 0) {
-            status = AHEAD;
-        } else {
-            status = OUTDATED;
-        }
-
-        if (status == ForgeVersion.Status.OUTDATED) {
-            hasUpdate = true;
-
-            String currentVersion = current.toString();
-            String latestVersion = latest.toString();
-
-            LOGGER.info("Found an update: "+latestVersion);
-
-            try {
-                Matcher currentMatcher = VERSION_PATTERN.matcher(currentVersion);
-                Matcher latestMatcher = VERSION_PATTERN.matcher(latestVersion);
-
-                // Its a patch if the major & minor numbers are the same & the player isn't upgrading out of a beta.
-                if (currentMatcher.matches() && latestMatcher.matches() &&
-                        currentMatcher.group("major").equals(latestMatcher.group("major")) &&
-                        currentMatcher.group("minor").equals(latestMatcher.group("minor")) &&
-                        !(currentVersion.contains("beta") && !latestVersion.contains("beta"))) {
-                    isPatch = true;
-                }
-            } catch (Exception ex) {
-                LOGGER.warn("Couldn't parse update version numbers... This shouldn't affect too much.");
-                LOGGER.catching(ex);
-            }
-
-            if (isPatch) {
-                messageToRender = Message.UPDATE_MESSAGE_PATCH.getMessage(latestVersion);
-            } else {
-                messageToRender = Message.UPDATE_MESSAGE_MAJOR.getMessage(latestVersion);
-            }
-        }
-    }
-
-    public void sendUpdateMessage() {
-        if (sentUpdateMessage) return;
-        if (main.getOnlineData().getVideoLink() == null) return;
-        String newestVersion = main.getOnlineData().getLatestVersion();
-        if (newestVersion == null) return;
-
-        sentUpdateMessage = true;
-
-        main.getUtils().sendMessage("§7§m------------§7[§b§l SkyblockAddons §7]§7§m------------", false);
-
-        ChatComponentText newUpdate = new ChatComponentText("§b" + Message.MESSAGE_NEW_UPDATE.getMessage(newestVersion) + "\n");
-        main.getUtils().sendMessage(newUpdate, false);
-
-        ChatComponentText buttonsMessage = new ChatComponentText("§b§l[" + Message.MESSAGE_DOWNLOAD_LINK.getMessage(newestVersion) + "]");
-        buttonsMessage.setChatStyle(buttonsMessage.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_URL, main.getOnlineData().getVideoLink()))
-                .setChatHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ChatComponentText("§7" +Message.MESSAGE_CLICK_TO_OPEN_LINK.getMessage()))));
-        buttonsMessage.appendSibling(new ChatComponentText(" "));
-
-        if (isPatch && main.getOnlineData().getDirectDownload() != null) {
-            ChatComponentText openModsFolder = new ChatComponentText("§c§l[" + Message.MESSAGE_DIRECT_DOWNLOAD.getMessage(newestVersion) + "]");
-            openModsFolder.setChatStyle(openModsFolder.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_URL, main.getOnlineData().getDirectDownload()))
-                    .setChatHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ChatComponentText("§7" +Message.MESSAGE_CLICK_TO_OPEN_LINK.getMessage()))));
-            openModsFolder.appendSibling(new ChatComponentText(" "));
-            buttonsMessage.appendSibling(openModsFolder);
-        }
-
-        ChatComponentText openModsFolder = new ChatComponentText("§e§l[" + Message.MESSAGE_OPEN_MODS_FOLDER.getMessage(newestVersion) + "]");
-        openModsFolder.setChatStyle(openModsFolder.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.RUN_COMMAND, "/sba folder"))
-                .setChatHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ChatComponentText("§7" +Message.MESSAGE_CLICK_TO_OPEN_FOLDER.getMessage()))));
-        buttonsMessage.appendSibling(openModsFolder);
-        main.getUtils().sendMessage(buttonsMessage, false);
-
-        ChatComponentText discord = new ChatComponentText("§b" + Message.MESSAGE_VIEW_PATCH_NOTES.getMessage() + " §9§l[" + Message.MESSAGE_JOIN_DISCORD.getMessage() + "]");
-        discord.setChatStyle(discord.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_URL, "https://discord.gg/biscuit"))
-                .setChatHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ChatComponentText("§7" +Message.MESSAGE_CLICK_TO_OPEN_LINK.getMessage()))));
-        main.getUtils().sendMessage(discord, false);
-
-        main.getUtils().sendMessage("§7§m----------------------------------------------", false);
-    }
-}
Index: src/main/java/codes/biscuit/skyblockaddons/tweaker/SkyblockAddonsLoadingPlugin.java
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/tweaker/SkyblockAddonsLoadingPlugin.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/tweaker/SkyblockAddonsLoadingPlugin.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,33 +0,0 @@
-package codes.biscuit.skyblockaddons.tweaker;
-
-import net.minecraftforge.common.ForgeVersion;
-import net.minecraftforge.fml.relauncher.IFMLLoadingPlugin;
-
-import java.util.Map;
-
-@IFMLLoadingPlugin.MCVersion(ForgeVersion.mcVersion)
-public class SkyblockAddonsLoadingPlugin implements IFMLLoadingPlugin {
-
-    @Override
-    public String[] getASMTransformerClass() {
-        return new String[]{SkyblockAddonsTransformer.class.getName()};
-    }
-
-    @Override
-    public String getModContainerClass() {
-        return null;
-    }
-
-    @Override
-    public String getSetupClass() {
-        return null;
-    }
-
-    @Override
-    public void injectData(Map<String, Object> data) {}
-
-    @Override
-    public String getAccessTransformerClass() {
-        return null;
-    }
-}
Index: src/main/resources/mcmod.info
===================================================================
--- src/main/resources/mcmod.info	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/resources/mcmod.info	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
@@ -1,10 +0,0 @@
-[{
-  "modid": "skyblockaddons",
-  "name": "SkyBlock Addons",
-  "description": "A mod with many features to improve your Hypixel Skyblock experience. Use /sba to open the menu!",
-  "version": "${version}",
-  "mcversion": "${mcversion}",
-  "url": "https://github.com/BiscuitDevelopment/SkyblockAddons",
-  "authorList": ["Biscut"],
-  "logoFile": "assets/skyblockaddons/logo.png"
-}]
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/features/EnchantedItemBlacklist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/features/EnchantedItemBlacklist.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/features/EnchantedItemBlacklist.java	(date 1604000115998)
@@ -5,8 +5,6 @@
 import codes.biscuit.skyblockaddons.core.Location;
 import codes.biscuit.skyblockaddons.utils.ItemUtils;
 import net.minecraft.item.ItemStack;
-import net.minecraftforge.event.entity.player.FillBucketEvent;
-import net.minecraftforge.event.entity.player.PlayerInteractEvent;
 
 public enum EnchantedItemBlacklist {
 
@@ -38,13 +36,13 @@
         this.onlyBlockPlacement = onlyBlockPlacement;
     }
 
-    /**
+    /*
      * Determine if the usage of this item should be blocked.
      *
      * @param itemStack the item being used
      * @param action the action the player is doing with the item
      * @return true if the usage should be blocked, false otherwise.
-     */
+     *
     public static boolean shouldBlockUsage(ItemStack itemStack, PlayerInteractEvent.Action action) {
         SkyblockAddons main = SkyblockAddons.getInstance();
         boolean blockUsage = false;
@@ -63,13 +61,13 @@
         }
         return blockUsage;
     }
+    */
 
     /**
      * Checks if the given item from this blacklist is a bucket.
      * This is used to handle buckets separately from other blocks and items.
      *
      * @return true if the item is a bucket, false otherwise
-     * @see codes.biscuit.skyblockaddons.listeners.PlayerListener#onBucketEvent(FillBucketEvent)
      */
     private boolean isBucket() {
         return itemId.contains("BUCKET");
Index: src/main/java/codes/biscuit/skyblockaddons/asm/WorldClientTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/WorldClientTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/WorldClientTransformer.java	(date 1603996355475)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public class WorldClientTransformer implements ITransformer {
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/SoundManagerTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/SoundManagerTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/SoundManagerTransformer.java	(date 1603996355475)
@@ -3,11 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.AbstractInsnNode;
-import org.objectweb.asm.tree.ClassNode;
-import org.objectweb.asm.tree.MethodInsnNode;
-import org.objectweb.asm.tree.MethodNode;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/RenderEndermanTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/RenderEndermanTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/RenderEndermanTransformer.java	(date 1603996355444)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/SkyblockAddons.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/SkyblockAddons.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/SkyblockAddons.java	(date 1604000749719)
@@ -8,40 +8,40 @@
 import codes.biscuit.skyblockaddons.core.OnlineData;
 import codes.biscuit.skyblockaddons.gui.IslandWarpGui;
 import codes.biscuit.skyblockaddons.gui.SkyblockAddonsGui;
-import codes.biscuit.skyblockaddons.listeners.GuiScreenListener;
+//import codes.biscuit.skyblockaddons.listeners.GuiScreenListener;
 import codes.biscuit.skyblockaddons.listeners.NetworkListener;
 import codes.biscuit.skyblockaddons.listeners.PlayerListener;
 import codes.biscuit.skyblockaddons.listeners.RenderListener;
 import codes.biscuit.skyblockaddons.misc.scheduler.Scheduler;
-import codes.biscuit.skyblockaddons.misc.SkyblockKeyBinding;
-import codes.biscuit.skyblockaddons.misc.Updater;
+//import codes.biscuit.skyblockaddons.misc.SkyblockKeyBinding;
+//import codes.biscuit.skyblockaddons.misc.Updater;
 import codes.biscuit.skyblockaddons.misc.scheduler.NewScheduler;
 import codes.biscuit.skyblockaddons.misc.scheduler.SkyblockRunnable;
 import codes.biscuit.skyblockaddons.utils.*;
-import codes.biscuit.skyblockaddons.features.discordrpc.DiscordRPCManager;
+//import codes.biscuit.skyblockaddons.features.discordrpc.DiscordRPCManager;
 import com.google.gson.Gson;
 import com.google.gson.stream.JsonReader;
 import lombok.Getter;
 import lombok.Setter;
 import net.minecraft.client.Minecraft;
-import net.minecraft.client.settings.KeyBinding;
-import net.minecraftforge.client.ClientCommandHandler;
-import net.minecraftforge.common.MinecraftForge;
-import net.minecraftforge.fml.client.registry.ClientRegistry;
-import net.minecraftforge.fml.common.Mod;
-import net.minecraftforge.fml.common.event.FMLInitializationEvent;
-import net.minecraftforge.fml.common.event.FMLModDisabledEvent;
-import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
-import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.lwjgl.input.Keyboard;
 
+import cc.hyperium.Hyperium;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.InitializationEvent;
+import cc.hyperium.event.InvokeEvent;
+import cc.hyperium.event.Priority;
+import cc.hyperium.event.client.PreInitializationEvent;
+import cc.hyperium.handlers.handlers.keybinds.HyperiumBind;
+import cc.hyperium.internal.addons.IAddon;
+
+import java.io.File;
 import java.util.*;
 
 @Getter
-@Mod(modid = "skyblockaddons", name = "SkyblockAddons", version = "@VERSION@", clientSideOnly = true, acceptedMinecraftVersions = "@MOD_ACCEPTED@")
-public class SkyblockAddons {
+public class SkyblockAddons implements IAddon {
 
     public static final String MOD_ID = "skyblockaddons";
     public static final String MOD_NAME = "SkyblockAddons";
@@ -53,71 +53,73 @@
     private ConfigValues configValues;
     private PersistentValues persistentValues;
     private PlayerListener playerListener;
-    private GuiScreenListener guiScreenListener;
+    //private GuiScreenListener guiScreenListener;
     private RenderListener renderListener;
     private InventoryUtils inventoryUtils;
     private Utils utils;
-    private Updater updater;
+    //private Updater updater;
     @Setter private OnlineData onlineData;
-    private DiscordRPCManager discordRPCManager;
+    //private DiscordRPCManager discordRPCManager;
     private Scheduler scheduler;
     private NewScheduler newScheduler;
 
     private boolean usingLabymod;
     private boolean usingOofModv1;
     @Setter private boolean devMode;
-    private List<SkyblockKeyBinding> keyBindings = new LinkedList<>();
+    private List<HyperiumBind> keyBindings = new LinkedList<>();
 
     @Getter private final Set<Integer> registeredFeatureIDs = new HashSet<>();
 
-    public SkyblockAddons() {
+    @Override
+    public void onLoad() {
         instance = this;
+        EventBus.INSTANCE.register(this);
         logger = LogManager.getLogger();
+        logger.info("Loading SBA!");
 
         playerListener = new PlayerListener();
-        guiScreenListener = new GuiScreenListener();
+        //guiScreenListener = new GuiScreenListener();
         renderListener = new RenderListener();
         inventoryUtils = new InventoryUtils();
         utils = new Utils();
-        updater = new Updater();
+        //updater = new Updater();
         scheduler = new Scheduler();
         newScheduler = new NewScheduler();
-        discordRPCManager = new DiscordRPCManager();
+        //discordRPCManager = new DiscordRPCManager();
     }
 
-    @Mod.EventHandler
-    public void preInit(FMLPreInitializationEvent e) {
-        configValues = new ConfigValues(e.getSuggestedConfigurationFile());
-        persistentValues = new PersistentValues(e.getModConfigurationDirectory());
+    @InvokeEvent
+    public void preInit(PreInitializationEvent e) {
+        configValues = new ConfigValues(new File("sba.conf"));
+        persistentValues = new PersistentValues(Hyperium.folder);
     }
 
-    @Mod.EventHandler
-    public void init(FMLInitializationEvent e) {
-        MinecraftForge.EVENT_BUS.register(new NetworkListener());
-        MinecraftForge.EVENT_BUS.register(playerListener);
-        MinecraftForge.EVENT_BUS.register(guiScreenListener);
-        MinecraftForge.EVENT_BUS.register(renderListener);
-        MinecraftForge.EVENT_BUS.register(scheduler);
-        MinecraftForge.EVENT_BUS.register(newScheduler);
+    @InvokeEvent
+    public void init(InitializationEvent e) {
+        EventBus.INSTANCE.register(new NetworkListener());
+        EventBus.INSTANCE.register(playerListener);
+        EventBus.INSTANCE.register(renderListener);
+        EventBus.INSTANCE.register(scheduler);
+        EventBus.INSTANCE.register(newScheduler);
 
-        ClientCommandHandler.instance.registerCommand(new SkyblockAddonsCommand());
+        Hyperium.INSTANCE.getHandlers().getCommandHandler().registerCommand(new SkyblockAddonsCommand());
 
-        addKeybinds(new SkyblockKeyBinding("open_settings", Keyboard.KEY_NONE, Message.SETTING_SETTINGS),
-                new SkyblockKeyBinding( "edit_gui", Keyboard.KEY_NONE, Message.SETTING_EDIT_LOCATIONS),
-                new SkyblockKeyBinding( "lock_slot", Keyboard.KEY_L, Message.SETTING_LOCK_SLOT),
-                new SkyblockKeyBinding( "freeze_backpack", Keyboard.KEY_F, Message.SETTING_FREEZE_BACKPACK_PREVIEW));
+        addKeybinds(new HyperiumBind("SBA Settings", Keyboard.KEY_NONE),
+                new HyperiumBind("Edit SBA Locations", Keyboard.KEY_NONE),
+                new HyperiumBind("Lock Slot with SBA", Keyboard.KEY_L),
+                new HyperiumBind("Freeze Backpack Preview", Keyboard.KEY_F));
     }
 
-    @Mod.EventHandler
-    public void postInit(FMLPostInitializationEvent e) {
+    @InvokeEvent(priority = Priority.LOW)
+    public void postInit(InitializationEvent e) {
         onlineData = new Gson().fromJson(new JsonReader(utils.getBufferedReader("data.json")), OnlineData.class);
         configValues.loadValues();
         persistentValues.loadValues();
 
-        setKeyBindingDescriptions();
+        //setKeyBindingDescriptions();
 
-        usingLabymod = utils.isModLoaded("labymod");
-        usingOofModv1 = utils.isModLoaded("refractionoof", "1.0");
+        //usingLabymod = utils.isModLoaded("labymod");
+        //usingOofModv1 = utils.isModLoaded("refractionoof", "1.0");
 
         utils.pullOnlineData();
         scheduleMagmaBossCheck();
@@ -137,11 +139,6 @@
         Minecraft.getMinecraft().getTextureManager().bindTexture(SkyblockAddonsGui.LOGO_GLOW);
     }
 
-    @Mod.EventHandler
-    public void stop(FMLModDisabledEvent e) {
-        discordRPCManager.stop();
-    }
-
     private void scheduleMagmaBossCheck() {
         // Loop every 5s until the player is in game, where it will pull once.
         newScheduler.scheduleRepeatingTask(new SkyblockRunnable() {
@@ -155,35 +152,26 @@
         }, 20*5, 20*5);
     }
 
-    public KeyBinding getOpenSettingsKey() {
-        return keyBindings.get(0).getKeyBinding();
-    }
-
-    public KeyBinding getOpenEditLocationsKey() {
-        return keyBindings.get(1).getKeyBinding();
+    public HyperiumBind getOpenSettingsKey() {
+        return keyBindings.get(0);
     }
 
-    public KeyBinding getLockSlotKey() {
-        return keyBindings.get(2).getKeyBinding();
+    public HyperiumBind getOpenEditLocationsKey() {
+        return keyBindings.get(1);
     }
 
-    public KeyBinding getFreezeBackpackKey() {
-        return keyBindings.get(3).getKeyBinding();
+    public HyperiumBind getLockSlotKey() {
+        return keyBindings.get(2);
     }
 
-    public void addKeybinds(SkyblockKeyBinding... keybinds) {
-        for (SkyblockKeyBinding skyblockKeyBinding : keybinds) {
-            KeyBinding keyBinding = new KeyBinding("key.skyblockaddons."+ skyblockKeyBinding.getName(), skyblockKeyBinding.getDefaultKey(), MOD_NAME);
-            ClientRegistry.registerKeyBinding(keyBinding);
-            skyblockKeyBinding.setKeyBinding(keyBinding);
-
-            keyBindings.add(skyblockKeyBinding);
-        }
+    public HyperiumBind getFreezeBackpackKey() {
+        return keyBindings.get(3);
     }
 
-    public void setKeyBindingDescriptions() {
-        for (SkyblockKeyBinding skyblockKeyBinding : keyBindings) {
-            skyblockKeyBinding.getKeyBinding().keyDescription = skyblockKeyBinding.getMessage().getMessage();
+    public void addKeybinds(HyperiumBind... keybinds) {
+        for (HyperiumBind b : keybinds) {
+            Hyperium.INSTANCE.getHandlers().getKeybindHandler().registerKeyBinding(b);
+            keyBindings.add(b);
         }
     }
 
@@ -193,4 +181,9 @@
             VERSION = "1.5.4";
         }
     }
+
+    @Override
+    public void onClose() {
+        EventBus.INSTANCE.unregister(this);
+    }
 }
Index: src/main/java/codes/biscuit/skyblockaddons/tweaker/transformer/ITransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/tweaker/transformer/ITransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/tweaker/transformer/ITransformer.java	(date 1603996356006)
@@ -1,6 +1,6 @@
 package codes.biscuit.skyblockaddons.tweaker.transformer;
 
-import org.objectweb.asm.tree.ClassNode;
+import org.spongepowered.asm.lib.tree.ClassNode;
 
 public interface ITransformer {
 
Index: src/main/java/codes/biscuit/skyblockaddons/commands/SkyblockAddonsCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/commands/SkyblockAddonsCommand.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/commands/SkyblockAddonsCommand.java	(date 1604001225057)
@@ -4,19 +4,21 @@
 import codes.biscuit.skyblockaddons.utils.EnumUtils;
 import codes.biscuit.skyblockaddons.utils.DevUtils;
 import codes.biscuit.skyblockaddons.utils.ColorCode;
+import codes.biscuit.skyblockaddons.utils.Utils;
 import net.minecraft.client.Minecraft;
 import net.minecraft.command.CommandBase;
 import net.minecraft.command.ICommandSender;
 import net.minecraft.scoreboard.Scoreboard;
+import cc.hyperium.commands.BaseCommand;
 import net.minecraft.util.BlockPos;
 import org.apache.logging.log4j.Logger;
 
 import java.awt.*;
 import java.io.IOException;
-import java.util.Collections;
+import java.util.Arrays;
 import java.util.List;
 
-public class SkyblockAddonsCommand extends CommandBase {
+public class SkyblockAddonsCommand implements BaseCommand {
 
     private SkyblockAddons main;
     private Logger logger;
@@ -26,10 +28,8 @@
         logger = main.getLogger();
     }
 
-    /**
-     * Gets the name of the command
-     */
-    public String getCommandName() {
+    @Override
+    public String getName() {
         return "skyblockaddons";
     }
 
@@ -46,7 +46,7 @@
      */
     public List<String> getCommandAliases()
     {
-        return Collections.singletonList("sba");
+        return Arrays.asList("sba", "sbaddons");
     }
 
     /**
@@ -77,7 +77,7 @@
         "§b● /sba brand §7- §e(Dev) §7Show the server brand" + "\n" +
         "§7§m------------------------------------------";
     }
-
+/*
     public List<String> addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
         if (args.length == 1) {
             if (main.isDevMode()) {
@@ -96,12 +96,17 @@
 
         return null;
     }
+*/
+    @Override
+    public String getUsage() {
+        return "skyblockaddons";
+    }
 
     /**
      * Opens the main gui, or locations gui if they type /sba edit
      */
     @Override
-    public void processCommand(ICommandSender sender, String[] args) {
+    public void onExecute(String[] args) {
         if (args.length > 0) {
             if (args[0].equalsIgnoreCase("edit")) {
                 main.getUtils().setFadingIn(false);
@@ -144,9 +149,9 @@
                 }
             }  else if (args[0].equalsIgnoreCase("folder")) {
                 try {
-                    Desktop.getDesktop().open(main.getUtils().getSBAFolder());
+                    Desktop.getDesktop().open(Utils.getSBAFolder());
                 } catch (IOException e) {
-                    logger.catching(e);
+                    e.printStackTrace();
                     main.getUtils().sendErrorMessage("Failed to open mods folder.");
                 }
             }  else if (args[0].equalsIgnoreCase("warp")) {
@@ -162,16 +167,16 @@
                         DevUtils.copyScoreboardSidebar(scoreboard, false);
 
                     } else {
-                        main.getUtils().sendMessage(getCommandUsage(sender), false);
+                        main.getUtils().sendMessage(getUsage(), false);
                     }
                 } else if (args[0].equalsIgnoreCase("brand")) {
                     main.getUtils().sendMessage(DevUtils.getServerBrand(Minecraft.getMinecraft()));
 
                 } else {
-                    main.getUtils().sendMessage(getCommandUsage(sender), false);
+                    main.getUtils().sendMessage(getUsage(), false);
                 }
             } else {
-                main.getUtils().sendMessage(getCommandUsage(sender), false);
+                main.getUtils().sendMessage(getUsage(), false);
             }
         } else {
             // If there's no arguments given, open the main GUI
Index: src/main/java/codes/biscuit/skyblockaddons/tweaker/SkyblockAddonsTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/tweaker/SkyblockAddonsTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/tweaker/SkyblockAddonsTransformer.java	(date 1604001307702)
@@ -8,9 +8,9 @@
 import org.apache.commons.lang3.mutable.MutableInt;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
-import org.objectweb.asm.ClassReader;
-import org.objectweb.asm.ClassWriter;
-import org.objectweb.asm.tree.ClassNode;
+import org.spongepowered.asm.lib.ClassReader;
+import org.spongepowered.asm.lib.ClassWriter;
+import org.spongepowered.asm.lib.tree.ClassNode;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -18,15 +18,11 @@
 import java.util.Collection;
 
 public class SkyblockAddonsTransformer implements IClassTransformer {
-    static {
-        PreTransformationChecks.runChecks();
-    }
-
     private final Logger logger = LogManager.getLogger("SkyblockAddons Transformer");
     private final Multimap<String, ITransformer> transformerMap = ArrayListMultimap.create();
 
     public SkyblockAddonsTransformer() {
-        registerTransformer(new TileEntityEnderChestRendererTransformer());
+        PreTransformationChecks.runChecks();
         registerTransformer(new MouseHelperTransformer());
         registerTransformer(new EntityPlayerSPTransformer());
         registerTransformer(new EntityRendererTransformer());
@@ -39,17 +35,12 @@
 
         registerTransformer(new GuiContainerTransformer());
         registerTransformer(new GuiChestTransformer());
-        registerTransformer(new GuiNewChatTransformer());
         registerTransformer(new RendererLivingEntityTransformer());
-        registerTransformer(new GuiDisconnectedTransformer());
 
         registerTransformer(new GuiIngameMenuTransformer());
 
-        registerTransformer(new FontRendererTransformer());
-        registerTransformer(new RenderItemTransformer());
         registerTransformer(new EntityLivingBaseTransformer());
         registerTransformer(new InventoryPlayerTransformer());
-        registerTransformer(new GuiIngameCustomTransformer());
         registerTransformer(new RenderEndermanTransformer());
         registerTransformer(new ModelEndermanTransformer());
         registerTransformer(new WorldClientTransformer());
@@ -80,9 +71,6 @@
             logger.info("Applying transformer {} on {}...", transformer.getClass().getName(), transformedName);
             transformer.transform(node, transformedName);
 
-            if (transformer instanceof FontRendererTransformer) {
-                classWriterFlags.setValue(0);
-            }
         });
 
         ClassWriter writer = new ClassWriter(classWriterFlags.getValue());
Index: src/main/java/codes/biscuit/skyblockaddons/listeners/GuiScreenListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/listeners/GuiScreenListener.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/listeners/GuiScreenListener.java	(date 1605113305446)
@@ -1,3 +1,4 @@
+/*
 package codes.biscuit.skyblockaddons.listeners;
 
 import codes.biscuit.skyblockaddons.SkyblockAddons;
@@ -15,7 +16,6 @@
  *
  * @author ILikePlayingGames
  * @version 1.0
- */
 public class GuiScreenListener {
 
     private SkyblockAddons main = SkyblockAddons.getInstance();
@@ -24,7 +24,6 @@
      * Listens for key presses while a GUI is open
      *
      * @param event the {@code GuiScreenEvent.KeyboardInputEvent} to listen for
-     */
     @SubscribeEvent()
     public void onKeyInput(GuiScreenEvent.KeyboardInputEvent event) {
         int eventKey = Keyboard.getEventKey();
@@ -47,3 +46,4 @@
         }
     }
 }
+*/
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/tweaker/PreTransformationChecks.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/tweaker/PreTransformationChecks.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/tweaker/PreTransformationChecks.java	(date 1603996356038)
@@ -1,7 +1,7 @@
 package codes.biscuit.skyblockaddons.tweaker;
 
+import cc.hyperium.Hyperium;
 import lombok.Getter;
-import net.minecraft.launchwrapper.Launch;
 
 public class PreTransformationChecks {
 
@@ -14,7 +14,7 @@
         // Environment Obfuscation checks
         deobfuscated = false;
 
-        deobfuscated = (boolean) Launch.blackboard.get("fml.deobfuscatedEnvironment");
+        deobfuscated = Hyperium.INSTANCE.isDevEnv();
 
         usingNotchMappings = !deobfuscated;
     }
Index: src/main/java/codes/biscuit/skyblockaddons/events/SkyblockJoinedEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/events/SkyblockJoinedEvent.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/events/SkyblockJoinedEvent.java	(date 1603996355616)
@@ -1,7 +1,7 @@
 package codes.biscuit.skyblockaddons.events;
 
+import cc.hyperium.event.Event;
 import codes.biscuit.skyblockaddons.utils.Utils;
-import net.minecraftforge.fml.common.eventhandler.Event;
 
 /**
  * This is fired by {@link Utils#checkGameLocationDate()} when the player joins Hypixel Skyblock.
Index: src/main/java/codes/biscuit/skyblockaddons/events/SkyblockLeftEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/events/SkyblockLeftEvent.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/events/SkyblockLeftEvent.java	(date 1603996355663)
@@ -1,7 +1,7 @@
 package codes.biscuit.skyblockaddons.events;
 
+import cc.hyperium.event.Event;
 import codes.biscuit.skyblockaddons.utils.Utils;
-import net.minecraftforge.fml.common.eventhandler.Event;
 
 /**
  * This is fired by {@link Utils#checkGameLocationDate()} when the player leaves Hypixel Skyblock or disconnects from a server.
Index: src/main/java/codes/biscuit/skyblockaddons/config/ConfigValues.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/config/ConfigValues.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/config/ConfigValues.java	(date 1603999694062)
@@ -3,7 +3,6 @@
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.core.Feature;
 import codes.biscuit.skyblockaddons.core.Language;
-import codes.biscuit.skyblockaddons.features.discordrpc.DiscordStatus;
 import codes.biscuit.skyblockaddons.misc.ChromaManager;
 import codes.biscuit.skyblockaddons.utils.EnumUtils;
 import codes.biscuit.skyblockaddons.utils.ColorCode;
@@ -59,9 +58,9 @@
     private MutableFloat chromaSpeed = new MutableFloat(0.19354838F); // 2.0
     private MutableObject<EnumUtils.ChromaMode> chromaMode = new MutableObject<>(EnumUtils.ChromaMode.FADE);
     private MutableFloat chromaFadeWidth = new MutableFloat(0.22580644F); // 10° Hue
-    private MutableObject<DiscordStatus> discordDetails =  new MutableObject<>(DiscordStatus.LOCATION);
-    private MutableObject<DiscordStatus> discordStatus = new MutableObject<>(DiscordStatus.AUTO_STATUS);
-    private MutableObject<DiscordStatus> discordAutoDefault = new MutableObject<>(DiscordStatus.NONE);
+    //private MutableObject<DiscordStatus> discordDetails =  new MutableObject<>(DiscordStatus.LOCATION);
+    //private MutableObject<DiscordStatus> discordStatus = new MutableObject<>(DiscordStatus.AUTO_STATUS);
+    //private MutableObject<DiscordStatus> discordAutoDefault = new MutableObject<>(DiscordStatus.NONE);
     @Getter private List<String> discordCustomStatuses = new ArrayList<>();
 
     public ConfigValues(File settingsConfigFile) {
@@ -152,9 +151,9 @@
             deserializeNumber(chromaSpeed, "chromaSpeed", float.class);
             deserializeEnumValueFromOrdinal(chromaMode, "chromaMode");
             deserializeNumber(chromaFadeWidth, "chromaFadeWidth", float.class);
-            deserializeEnumValueFromOrdinal(discordStatus, "discordStatus");
-            deserializeEnumValueFromOrdinal(discordDetails, "discordDetails");
-            deserializeEnumValueFromOrdinal(discordAutoDefault, "discordAutoDefault");
+            //deserializeEnumValueFromOrdinal(discordStatus, "discordStatus");
+            //deserializeEnumValueFromOrdinal(discordDetails, "discordDetails");
+            //deserializeEnumValueFromOrdinal(discordAutoDefault, "discordAutoDefault");
             deserializeStringCollection(discordCustomStatuses, "discordCustomStatuses");
 
             int configVersion;
@@ -342,16 +341,6 @@
             settingsConfig.addProperty("chromaMode", chromaMode.getValue().ordinal());
             settingsConfig.addProperty("chromaFadeWidth", chromaFadeWidth);
 
-            settingsConfig.addProperty("discordStatus", discordStatus.getValue().ordinal());
-            settingsConfig.addProperty("discordDetails", discordDetails.getValue().ordinal());
-            settingsConfig.addProperty("discordAutoDefault", discordAutoDefault.getValue().ordinal());
-
-            JsonArray discordCustomStatusesArray = new JsonArray();
-            for (String string : discordCustomStatuses) {
-                discordCustomStatusesArray.add(new GsonBuilder().create().toJsonTree(string));
-            }
-            settingsConfig.add("discordCustomStatuses", discordCustomStatusesArray);
-
             settingsConfig.addProperty("configVersion", CONFIG_VERSION);
             int largestFeatureID = 0;
             for (Feature feature : Feature.values()) {
@@ -885,6 +874,7 @@
         return chromaFadeWidth.getValue();
     }
 
+    /*
     public void setDiscordDetails(DiscordStatus discordDetails) {
         this.discordDetails.setValue(discordDetails);
     }
@@ -924,4 +914,5 @@
 
         return discordCustomStatuses.set(statusEntry.getId(), text);
     }
+    */
 }
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/SoundManagerHook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/SoundManagerHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/SoundManagerHook.java	(date 1604001225057)
@@ -13,7 +13,7 @@
         if (main != null && main.getUtils() != null && main.getUtils().isPlayingSound()) {
             return 1;
         } else {
-            return soundManager.getNormalizedVolume(sound, entry, category);
+            return (float) codes.biscuit.skyblockaddons.Reflector.invoke(SoundManager.class, soundManager, "getNormalizedVolume", new Class[]{ISound.class, SoundPoolEntry.class, SoundCategory.class}, new Object[]{sound, entry, category});
         }
     }
 }
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiScreenHook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiScreenHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiScreenHook.java	(date 1603996355272)
@@ -1,5 +1,6 @@
 package codes.biscuit.skyblockaddons.asm.hooks;
 
+import cc.hyperium.event.world.item.ItemTooltipEvent;
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.asm.utils.ReturnValue;
 import codes.biscuit.skyblockaddons.features.backpacks.Backpack;
@@ -15,7 +16,6 @@
 import net.minecraft.inventory.IInventory;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.IChatComponent;
-import net.minecraftforge.event.entity.player.ItemTooltipEvent;
 import org.lwjgl.input.Keyboard;
 
 public class GuiScreenHook {
@@ -80,7 +80,7 @@
                 if (!GuiContainerHook.isFreezeBackpack()) {
                     main.getUtils().setBackpackToPreview(backpack);
                 }
-                main.getPlayerListener().onItemTooltip(new ItemTooltipEvent(stack, null, null, false));
+                main.getPlayerListener().onItemTooltip(new ItemTooltipEvent(stack, null));
                 returnValue.cancel();
             }
         }
@@ -92,8 +92,6 @@
     private static boolean isFreezeKeyDown() {
         SkyblockAddons main = SkyblockAddons.getInstance();
 
-        if (main.getFreezeBackpackKey().isKeyDown()) return true;
-        if (main.getFreezeBackpackKey().isPressed()) return true;
         try {
             if (Keyboard.isKeyDown(main.getFreezeBackpackKey().getKeyCode())) return true;
         } catch (Exception ignored) {}
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiChestHook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiChestHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiChestHook.java	(date 1603996355257)
@@ -1,5 +1,6 @@
 package codes.biscuit.skyblockaddons.asm.hooks;
 
+import codes.biscuit.skyblockaddons.Reflector;
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.asm.utils.ReturnValue;
 import codes.biscuit.skyblockaddons.core.Feature;
@@ -297,7 +298,8 @@
         if (main.getUtils().isOnSkyblock()) {
             if (main.getUtils().getEnchantmentMatches().size() > 0) {
                 if (slotIn != null && !slotIn.inventory.equals(Minecraft.getMinecraft().thePlayer.inventory) && slotIn.getHasStack()) {
-                    if (slotIn.getSlotIndex() == 13 && main.getInventoryUtils().getInventoryType() == InventoryType.ENCHANTMENT_TABLE) {
+                    int slotIndex = (int) Reflector.getFieldValue(slotIn.getClass(), slotIn, "slotIndex");
+                    if (slotIndex == 13 && main.getInventoryUtils().getInventoryType() == InventoryType.ENCHANTMENT_TABLE) {
                         ItemStack[] enchantBottles = {slots.getSlot(29).getStack(), slots.getSlot(31).getStack(), slots.getSlot(33).getStack()};
                         for (ItemStack bottle : enchantBottles) {
                             if (bottle != null && bottle.hasDisplayName()) {
@@ -322,7 +324,7 @@
                                 }
                             }
                         }
-                    } else if (slotIn.getSlotIndex() == 22 && (main.getInventoryUtils().getInventoryType() == InventoryType.BASIC_REFORGING
+                    } else if (slotIndex == 22 && (main.getInventoryUtils().getInventoryType() == InventoryType.BASIC_REFORGING
                             || main.getInventoryUtils().getInventoryType() == InventoryType.BASIC_ACCESSORY_BAG_REFORGING)) {
                         Slot itemSlot = slots.getSlot(13);
                         if (itemSlot != null && itemSlot.getHasStack()) {
Index: src/main/java/codes/biscuit/skyblockaddons/utils/DevUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/utils/DevUtils.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/utils/DevUtils.java	(date 1605113521467)
@@ -12,7 +12,7 @@
 import net.minecraft.scoreboard.ScorePlayerTeam;
 import net.minecraft.scoreboard.Scoreboard;
 import net.minecraft.util.StringUtils;
-import net.minecraftforge.common.util.Constants;
+//import net.minecraftforge.common.util.Constants;
 import org.lwjgl.input.Keyboard;
 
 import java.awt.*;
@@ -118,6 +118,7 @@
             sb.insert(0, "\n").insert(0, org.apache.commons.lang3.StringUtils.center(objectiveName, width));
 
             copyStringToClipboard(sb.toString(), "Sidebar copied to clipboard!");
+            formatter.close();
         }
     }
 
@@ -150,7 +151,6 @@
 
             stringBuilder.append("NBT Data:").append(System.lineSeparator());
             entity.writeToNBT(entityData);
-            stringBuilder.append(prettyPrintNBT(entityData));
 
             // Add spacing if necessary.
             if (loadedEntitiesCopyIterator.hasNext()) {
@@ -161,12 +161,14 @@
         copyStringToClipboard(stringBuilder.toString(), ColorCode.GREEN + "Entity data was copied to clipboard!");
     }
 
-    /**
+
+
+    /*
      * Copies the provided NBT tag to the clipboard as a formatted string.
      *
      * @param nbtTag the NBT tag to copy
      * @param message the message to show in chat when the NBT tag is copied
-     */
+
     public static void copyNBTTagToClipboard(NBTBase nbtTag, String message) {
         if (nbtTag == null) {
             SkyblockAddons.getInstance().getUtils().sendMessage("This item has no NBT data.");
@@ -174,6 +176,7 @@
         }
         writeToClipboard(prettyPrintNBT(nbtTag), message);
     }
+     */
 
     /**
      * Copies the provided NBT tags to the clipboard as a formatted string.
@@ -191,7 +194,6 @@
             }
 
             stringBuilder.append("Tag ").append(i).append(": ").append(System.lineSeparator());
-            stringBuilder.append(prettyPrintNBT(nbtTags.get(i)));
 
             // Add a blank line if necessary
             if (i < (nbtTags.size()) - 1) {
@@ -254,7 +256,6 @@
      *
      * @param nbt the NBT tag to pretty print
      * @return pretty-printed string of the NBT data
-     */
     public static String prettyPrintNBT(NBTBase nbt) {
         final String INDENT = "    ";
 
@@ -358,6 +359,7 @@
 
         return stringBuilder.toString();
     }
+    */
 
     // Internal methods
     private static void writeToClipboard(String text, String successMessage) {
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiContainerHook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiContainerHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/GuiContainerHook.java	(date 1603996355257)
@@ -1,5 +1,6 @@
 package codes.biscuit.skyblockaddons.asm.hooks;
 
+import codes.biscuit.skyblockaddons.Reflector;
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.asm.utils.ReturnValue;
 import codes.biscuit.skyblockaddons.core.Feature;
@@ -12,6 +13,7 @@
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.FontRenderer;
 import net.minecraft.client.gui.Gui;
+import net.minecraft.client.gui.GuiScreen;
 import net.minecraft.client.gui.inventory.GuiContainer;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.RenderHelper;
@@ -23,6 +25,7 @@
 import net.minecraft.util.ResourceLocation;
 
 import javax.lang.model.type.NullType;
+import java.util.List;
 
 public class GuiContainerHook {
 
@@ -103,11 +106,11 @@
                         int itemX = x+8 + ((i % 9) * 18);
                         int itemY = y+18 + ((i / 9) * 18);
                         RenderItem renderItem = mc.getRenderItem();
-                        guiContainer.zLevel = 200;
+                        Reflector.setFieldValue(guiContainer.getClass(), guiContainer, "zLevel", 200);
                         renderItem.zLevel = 200;
                         renderItem.renderItemAndEffectIntoGUI(item, itemX, itemY);
                         renderItem.renderItemOverlayIntoGUI(mc.fontRendererObj, item, itemX, itemY, null);
-                        guiContainer.zLevel = 0;
+                        Reflector.setFieldValue(guiContainer.getClass(), guiContainer, "zLevel", 0);
                         renderItem.zLevel = 0;
 
                         if (freezeBackpack && mouseX > itemX && mouseX < itemX+16 && mouseY > itemY && mouseY < itemY+16) {
@@ -141,11 +144,11 @@
                         int itemX = x + ((i % 9) * 16);
                         int itemY = y + ((i / 9) * 16);
                         RenderItem renderItem = mc.getRenderItem();
-                        guiContainer.zLevel = 200;
+                        Reflector.setFieldValue(guiContainer.getClass(), guiContainer, "zLevel", 200);
                         renderItem.zLevel = 200;
                         renderItem.renderItemAndEffectIntoGUI(item, itemX, itemY);
                         renderItem.renderItemOverlayIntoGUI(mc.fontRendererObj, item, itemX, itemY, null);
-                        guiContainer.zLevel = 0;
+                        Reflector.setFieldValue(guiContainer.getClass(), guiContainer, "zLevel", 0);
                         renderItem.zLevel = 0;
 
                         if (freezeBackpack && mouseX > itemX && mouseX < itemX+16 && mouseY > itemY && mouseY < itemY+16) {
@@ -155,7 +158,7 @@
                 }
             }
             if (tooltipItem != null) {
-                guiContainer.drawHoveringText(tooltipItem.getTooltip(mc.thePlayer, mc.gameSettings.advancedItemTooltips), mouseX, mouseY);
+                Reflector.invoke(GuiScreen.class, guiContainer, "drawHoveringText", new Class[]{List.class, int.class, int.class}, new Object[]{tooltipItem.getTooltip(mc.thePlayer, mc.gameSettings.advancedItemTooltips), mouseX, mouseY});
             }
             if (!freezeBackpack) {
                 main.getUtils().setBackpackToPreview(null);
@@ -180,11 +183,11 @@
             if (main.getConfigValues().isEnabled(Feature.LOCK_SLOTS) &&
                     main.getUtils().isOnSkyblock() && main.getConfigValues().getLockedSlots().contains(slotNum)
                     && (slotNum >= 9 || container instanceof ContainerPlayer && slotNum >= 5)) {
-                guiContainer.drawGradientRect(left, top, right, bottom, OVERLAY_RED, OVERLAY_RED);
+                Reflector.invoke(Gui.class, guiContainer, "drawGradientRect", new Class[]{int.class, int.class, int.class, int.class, int.class, int.class}, new Object[]{left, top, right, bottom, OVERLAY_RED, OVERLAY_RED});
                 return;
             }
         }
-        guiContainer.drawGradientRect(left, top, right, bottom, startColor, endColor);
+        Reflector.invoke(Gui.class, guiContainer, "drawGradientRect", new Class[]{int.class, int.class, int.class, int.class, int.class, int.class}, new Object[]{left, top, right, bottom, OVERLAY_RED, OVERLAY_RED});
     }
 
     public static void drawSlot(GuiContainer guiContainer, Slot slot) {
@@ -198,7 +201,8 @@
                     && slot.inventory.getDisplayName().getUnformattedText().equals(CraftingPattern.CRAFTING_TABLE_DISPLAYNAME)
                     && main.getPersistentValues().getSelectedCraftingPattern() != CraftingPattern.FREE) {
 
-                int craftingGridIndex = CraftingPattern.slotToCraftingGridIndex(slot.getSlotIndex());
+                int slotIndex = (int) Reflector.getFieldValue(Slot.class, slot, "slotIndex");
+                int craftingGridIndex = CraftingPattern.slotToCraftingGridIndex(slotIndex);
                 if (craftingGridIndex >= 0) {
                     int slotLeft = slot.xDisplayPosition;
                     int slotTop = slot.yDisplayPosition;
@@ -206,11 +210,11 @@
                     int slotBottom = slotTop + 16;
                     if (main.getPersistentValues().getSelectedCraftingPattern().isSlotInPattern(craftingGridIndex)) {
                         if (!slot.getHasStack()) {
-                            guiContainer.drawGradientRect(slotLeft, slotTop, slotRight, slotBottom, OVERLAY_GREEN, OVERLAY_GREEN);
+                            Reflector.invoke(Gui.class, guiContainer, "drawGradientRect", new Class[]{int.class, int.class, int.class, int.class, int.class, int.class}, new Object[]{slotLeft, slotTop, slotRight, slotBottom, OVERLAY_GREEN, OVERLAY_GREEN});
                         }
                     } else {
                         if (slot.getHasStack()) {
-                            guiContainer.drawGradientRect(slotLeft, slotTop, slotRight, slotBottom, OVERLAY_RED, OVERLAY_RED);
+                            Reflector.invoke(Gui.class, guiContainer, "drawGradientRect", new Class[]{int.class, int.class, int.class, int.class, int.class, int.class}, new Object[]{slotLeft, slotTop, slotRight, slotBottom, OVERLAY_RED, OVERLAY_RED});
                         }
                     }
                 }
Index: src/main/java/codes/biscuit/skyblockaddons/utils/ItemUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/utils/ItemUtils.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/utils/ItemUtils.java	(date 1603996356084)
@@ -4,7 +4,6 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
-import net.minecraftforge.common.util.Constants;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -37,7 +36,7 @@
             return null;
         }
 
-        NBTTagList lore = display.getTagList("Lore", Constants.NBT.TAG_STRING);
+        NBTTagList lore = display.getTagList("Lore", 8);
 
         // Determine the item's rarity
         for (int i = 0; i < lore.tagCount(); i++) {
Index: src/main/java/codes/biscuit/skyblockaddons/utils/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/utils/Utils.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/utils/Utils.java	(date 1605113704420)
@@ -32,16 +32,17 @@
 import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.ResourceLocation;
-import net.minecraftforge.client.event.ClientChatReceivedEvent;
-import net.minecraftforge.common.MinecraftForge;
-import net.minecraftforge.fml.common.Loader;
-import net.minecraftforge.fml.common.ModContainer;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.mutable.MutableInt;
 import org.apache.commons.lang3.text.WordUtils;
 import org.apache.logging.log4j.Logger;
 import org.lwjgl.opengl.GL11;
 
+import cc.hyperium.Hyperium;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.network.chat.ChatEvent;
+import cc.hyperium.handlers.handlers.HypixelDetector;
+
 import javax.imageio.ImageIO;
 import java.awt.*;
 import java.awt.image.BufferedImage;
@@ -152,10 +153,10 @@
     }
 
     public void sendMessage(String text, boolean prefix) {
-        ClientChatReceivedEvent event = new ClientChatReceivedEvent((byte) 1, new ChatComponentText((prefix ? MESSAGE_PREFIX : "") + text));
-        MinecraftForge.EVENT_BUS.post(event); // Let other mods pick up the new message
-        if (!event.isCanceled()) {
-            Minecraft.getMinecraft().thePlayer.addChatMessage(event.message); // Just for logs
+        ChatEvent event = new ChatEvent(new ChatComponentText((prefix ? MESSAGE_PREFIX : "") + text));
+        EventBus.INSTANCE.post(event);
+        if (!event.isCancelled()) {
+            Minecraft.getMinecraft().thePlayer.addChatMessage(event.getChat()); // Just for logs
         }
     }
 
@@ -170,10 +171,10 @@
             text = newText;
         }
 
-        ClientChatReceivedEvent event = new ClientChatReceivedEvent((byte) 1, text);
-        MinecraftForge.EVENT_BUS.post(event); // Let other mods pick up the new message
-        if (!event.isCanceled()) {
-            Minecraft.getMinecraft().thePlayer.addChatMessage(event.message); // Just for logs
+        ChatEvent event = new ChatEvent(text);
+        EventBus.INSTANCE.post(event); // Let other mods pick up the new message
+        if (!event.isCancelled()) {
+            Minecraft.getMinecraft().thePlayer.addChatMessage(event.getChat()); // Just for logs
         }
     }
 
@@ -187,25 +188,7 @@
      * @return {@code true} if the player is on Hypixel, {@code false} otherwise
      */
     public boolean isOnHypixel() {
-        final Pattern SERVER_BRAND_PATTERN = Pattern.compile("(.+) <- (?:.+)");
-        final String HYPIXEL_SERVER_BRAND = "BungeeCord (Hypixel)";
-
-        Minecraft mc = Minecraft.getMinecraft();
-
-        if (!mc.isSingleplayer() && mc.thePlayer.getClientBrand() != null) {
-            Matcher matcher = SERVER_BRAND_PATTERN.matcher(mc.thePlayer.getClientBrand());
-
-            if (matcher.find()) {
-                // Group 1 is the server brand.
-                return matcher.group(1).equals(HYPIXEL_SERVER_BRAND);
-            }
-            else {
-                return false;
-            }
-        }
-        else {
-            return false;
-        }
+        return HypixelDetector.getInstance().isHypixel();
     }
 
     private long lastFoundScoreboard = -1;
@@ -240,7 +223,7 @@
                 // If it's a Skyblock scoreboard and the player has not joined Skyblock yet,
                 // this indicates that he did so.
                 if (foundSkyblockTitle && !this.isOnSkyblock()) {
-                    MinecraftForge.EVENT_BUS.post(new SkyblockJoinedEvent());
+                    EventBus.INSTANCE.post(new SkyblockJoinedEvent());
                 }
 
                 Collection<Score> scoreboardLines = scoreboard.getSortedScores(sidebarObjective);
@@ -360,7 +343,7 @@
             // Check if we found a scoreboard in general. If not, its possible they are switching worlds.
             // If we don't find a scoreboard for 10s, then we know they actually left the server.
             if (foundScoreboard || System.currentTimeMillis() - lastFoundScoreboard > 10000) {
-                MinecraftForge.EVENT_BUS.post(new SkyblockLeftEvent());
+                EventBus.INSTANCE.post(new SkyblockLeftEvent());
             }
         }
     }
@@ -571,8 +554,8 @@
      *
      * @return the folder the SkyblockAddons jar is located in
      */
-    public File getSBAFolder() {
-        return Loader.instance().activeModContainer().getSource().getParentFile();
+    public static File getSBAFolder() {
+        return new File(Hyperium.folder.getParent() + "/addons");
     }
 
     public int getNBTInteger(ItemStack item, String... path) {
@@ -868,8 +851,6 @@
 
                 main.setOnlineData(new Gson().fromJson(response.toString(), OnlineData.class));
                 logger.info("Successfully grabbed online data.");
-
-                main.getUpdater().processUpdateCheckResult();
             } catch (Exception ex) {
                 logger.warn("There was an error while trying to pull the online data...");
                 logger.catching(ex);
@@ -991,32 +972,6 @@
         GlStateManager.blendFunc(blendFunctionSrcFactor, blendFunctionDstFactor);
     }
 
-    public boolean isModLoaded(String modId) {
-        return isModLoaded(modId, null);
-    }
-
-    /**
-     * Check if another mod is loaded.
-     *
-     * @param modId The modid to check.
-     * @param version The version of the mod to match (optional).
-     */
-    public boolean isModLoaded(String modId, String version) {
-        boolean isLoaded = Loader.isModLoaded(modId); // Check for the modid...
-
-        if (isLoaded && version != null) { // Check for the specific version...
-            for (ModContainer modContainer : Loader.instance().getModList()) {
-                if (modContainer.getModId().equals(modId) && modContainer.getVersion().equals(version)) {
-                    return true;
-                }
-            }
-
-            return false;
-        }
-
-        return isLoaded;
-    }
-
     public void drawCenteredString(String text, float x, float y, int color) {
         Minecraft.getMinecraft().fontRendererObj.drawString(text, x - Minecraft.getMinecraft().fontRendererObj.getStringWidth(text) / 2F, y, color, true);
     }
Index: src/main/java/codes/biscuit/skyblockaddons/utils/InventoryUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/utils/InventoryUtils.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/utils/InventoryUtils.java	(date 1603996356084)
@@ -19,13 +19,13 @@
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 
+import java.lang.reflect.Field;
 import java.math.BigDecimal;
+import java.math.RoundingMode;
 import java.util.*;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-//TODO Fix for Hypixel localization
-
 /**
  * Utility methods related to player inventories
  */
@@ -43,7 +43,8 @@
     public static final String TREECAPITATOR_DISPLAYNAME = "§5Treecapitator";
     public static final String CHICKEN_HEAD_DISPLAYNAME = "§fChicken Head";
 
-    private static final Pattern REVENANT_UPGRADE_PATTERN = Pattern.compile("Next Upgrade: \\+([0-9]+❈) \\(([0-9,]+)/([0-9,]+)\\)");
+    private static final Pattern REVENANT_UPGRADE_PATTERN = Pattern
+            .compile("Next Upgrade: \\+([0-9]+❈) \\(([0-9,]+)/([0-9,]+)\\)");
 
     private List<ItemStack> previousInventory;
     private Multimap<String, ItemDiff> itemPickupLog = ArrayListMultimap.create();
@@ -52,13 +53,17 @@
     private boolean inventoryWarningShown;
 
     /** Whether the player is wearing a Skeleton Helmet. */
-    @Getter private boolean wearingSkeletonHelmet;
+    @Getter
+    private boolean wearingSkeletonHelmet;
 
-    @Getter private boolean usingToxicArrowPoison;
+    @Getter
+    private boolean usingToxicArrowPoison;
 
-    @Getter private SlayerArmorProgress[] slayerArmorProgresses = new SlayerArmorProgress[4];
+    @Getter
+    private SlayerArmorProgress[] slayerArmorProgresses = new SlayerArmorProgress[4];
 
-    @Getter private InventoryType inventoryType;
+    @Getter
+    private InventoryType inventoryType;
 
     private SkyblockAddons main = SkyblockAddons.getInstance();
 
@@ -81,8 +86,8 @@
     }
 
     /**
-     * Compares previously recorded Inventory state with current Inventory state to determine changes and
-     * stores them in {@link #itemPickupLog}
+     * Compares previously recorded Inventory state with current Inventory state to
+     * determine changes and stores them in {@link #itemPickupLog}
      *
      * @param currentInventory Current Inventory state
      */
@@ -93,23 +98,27 @@
 
         if (previousInventory != null) {
 
-            for(int i = 0; i < newInventory.size(); i++) {
-                if (i == SKYBLOCK_MENU_SLOT) { // Skip the SkyBlock Menu slot all together (which includes the Quiver Arrow now)
+            for (int i = 0; i < newInventory.size(); i++) {
+                if (i == SKYBLOCK_MENU_SLOT) { // Skip the SkyBlock Menu slot all together (which includes the Quiver
+                                               // Arrow now)
                     continue;
                 }
 
                 ItemStack previousItem = previousInventory.get(i);
                 ItemStack newItem = newInventory.get(i);
 
-                if(previousItem != null) {
-                    int amount = previousInventoryMap.getOrDefault(previousItem.getDisplayName(), 0) + previousItem.stackSize;
+                if (previousItem != null) {
+                    int amount = previousInventoryMap.getOrDefault(previousItem.getDisplayName(), 0)
+                            + previousItem.stackSize;
                     previousInventoryMap.put(previousItem.getDisplayName(), amount);
                 }
 
-                if(newItem != null) {
-                    if (newItem.getDisplayName().contains(" "+ ColorCode.DARK_GRAY+"x")) {
-                        String newName = newItem.getDisplayName().substring(0, newItem.getDisplayName().lastIndexOf(" "));
-                        newItem.setStackDisplayName(newName); // This is a workaround for merchants, it adds x64 or whatever to the end of the name.
+                if (newItem != null) {
+                    if (newItem.getDisplayName().contains(" " + ColorCode.DARK_GRAY + "x")) {
+                        String newName = newItem.getDisplayName().substring(0,
+                                newItem.getDisplayName().lastIndexOf(" "));
+                        newItem.setStackDisplayName(newName); // This is a workaround for merchants, it adds x64 or
+                                                              // whatever to the end of the name.
                     }
                     int amount = newInventoryMap.getOrDefault(newItem.getDisplayName(), 0) + newItem.stackSize;
                     newInventoryMap.put(newItem.getDisplayName(), amount);
@@ -129,7 +138,8 @@
                 }
             });
 
-            // Add changes to already logged changes of the same item, so it will increase/decrease the amount
+            // Add changes to already logged changes of the same item, so it will
+            // increase/decrease the amount
             // instead of displaying the same item twice
             for (ItemDiff diff : inventoryDifference) {
                 Collection<ItemDiff> itemDiffs = itemPickupLog.get(diff.getDisplayName());
@@ -138,13 +148,14 @@
                 } else {
                     boolean added = false;
                     for (ItemDiff loopDiff : itemDiffs) {
-                        if ((diff.getAmount() < 0 && loopDiff.getAmount() < 0) ||
-                                (diff.getAmount() > 0 && loopDiff.getAmount() > 0)) {
+                        if ((diff.getAmount() < 0 && loopDiff.getAmount() < 0)
+                                || (diff.getAmount() > 0 && loopDiff.getAmount() > 0)) {
                             loopDiff.add(diff.getAmount());
                             added = true;
                         }
                     }
-                    if (!added) itemPickupLog.put(diff.getDisplayName(), diff);
+                    if (!added)
+                        itemPickupLog.put(diff.getDisplayName(), diff);
                 }
             }
 
@@ -161,7 +172,8 @@
     }
 
     /**
-     * Removes items in the pickup log that have been there for longer than {@link ItemDiff#LIFESPAN}
+     * Removes items in the pickup log that have been there for longer than
+     * {@link ItemDiff#LIFESPAN}
      */
     public void cleanUpPickupLog() {
         itemPickupLog.entries().removeIf(entry -> entry.getValue().getLifetime() > ItemDiff.LIFESPAN);
@@ -171,17 +183,18 @@
      * Checks if the players inventory is full and displays an alarm if so.
      *
      * @param mc Minecraft instance
-     * @param p Player to check
+     * @param p  Player to check
      */
     public void checkIfInventoryIsFull(Minecraft mc, EntityPlayerSP p) {
         if (main.getUtils().isOnSkyblock() && main.getConfigValues().isEnabled(Feature.FULL_INVENTORY_WARNING)) {
             /*
-            If the inventory is full, show the full inventory warning.
-            Slot 8 is the Skyblock menu/quiver arrow slot. It's ignored so shooting with a full inventory
-            doesn't spam the full inventory warning.
+             * If the inventory is full, show the full inventory warning. Slot 8 is the
+             * Skyblock menu/quiver arrow slot. It's ignored so shooting with a full
+             * inventory doesn't spam the full inventory warning.
              */
             for (int i = 0; i < p.inventory.mainInventory.length; i++) {
-                // If we find an empty slot that isn't slot 8, remove any queued warnings and stop checking.
+                // If we find an empty slot that isn't slot 8, remove any queued warnings and
+                // stop checking.
                 if (p.inventory.mainInventory[i] == null && i != 8) {
                     if (inventoryWarningShown) {
                         main.getScheduler().removeQueuedFullInventoryWarnings();
@@ -192,14 +205,17 @@
             }
 
             // If we make it here, the inventory is full. Show the warning.
-            if (mc.currentScreen == null && main.getPlayerListener().didntRecentlyJoinWorld() && !inventoryWarningShown) {
+            if (mc.currentScreen == null && main.getPlayerListener().didntRecentlyJoinWorld()
+                    && !inventoryWarningShown) {
                 showFullInventoryWarning();
-                main.getScheduler().schedule(Scheduler.CommandType.RESET_TITLE_FEATURE, main.getConfigValues().getWarningSeconds());
+                main.getScheduler().schedule(Scheduler.CommandType.RESET_TITLE_FEATURE,
+                        main.getConfigValues().getWarningSeconds());
 
                 // Schedule a repeat if needed.
                 if (main.getConfigValues().isEnabled(Feature.REPEAT_FULL_INVENTORY_WARNING)) {
                     main.getScheduler().schedule(Scheduler.CommandType.SHOW_FULL_INVENTORY_WARNING, 10);
-                    main.getScheduler().schedule(Scheduler.CommandType.RESET_TITLE_FEATURE, 10 + main.getConfigValues().getWarningSeconds());
+                    main.getScheduler().schedule(Scheduler.CommandType.RESET_TITLE_FEATURE,
+                            10 + main.getConfigValues().getWarningSeconds());
                 }
 
                 inventoryWarningShown = true;
@@ -216,7 +232,8 @@
     }
 
     /**
-     * Checks if the player is wearing a Skeleton Helmet and updates {@link #wearingSkeletonHelmet} accordingly
+     * Checks if the player is wearing a Skeleton Helmet and updates
+     * {@link #wearingSkeletonHelmet} accordingly
      *
      * @param p Player to check
      */
@@ -232,7 +249,8 @@
     }
 
     /**
-     * Determines if the player is using Toxic Arrow Poison by detecting if it is present in their inventory.
+     * Determines if the player is using Toxic Arrow Poison by detecting if it is
+     * present in their inventory.
      *
      * @param p the player to check
      */
@@ -249,19 +267,26 @@
     }
 
     /**
-     * The difference between a slot number in any given {@link Container} and what that number would be in a {@link ContainerPlayer}.
+     * The difference between a slot number in any given {@link Container} and what
+     * that number would be in a {@link ContainerPlayer}.
      */
     public int getSlotDifference(Container container) {
-        if (container instanceof ContainerChest) return 9-((ContainerChest)container).getLowerChestInventory().getSizeInventory();
-        else if (container instanceof ContainerHopper) return 4;
-        else if (container instanceof ContainerFurnace) return 6;
-        else if (container instanceof ContainerBeacon) return 8;
-        else return 0;
+        if (container instanceof ContainerChest)
+            return 9 - ((ContainerChest) container).getLowerChestInventory().getSizeInventory();
+        else if (container instanceof ContainerHopper)
+            return 4;
+        else if (container instanceof ContainerFurnace)
+            return 6;
+        else if (container instanceof ContainerBeacon)
+            return 8;
+        else
+            return 0;
     }
 
     /**
-     * Checks if the player is wearing any Revenant or Tarantula armor.
-     * If the armor is detected, the armor's levelling progress is retrieved to be displayed on the HUD.
+     * Checks if the player is wearing any Revenant or Tarantula armor. If the armor
+     * is detected, the armor's levelling progress is retrieved to be displayed on
+     * the HUD.
      *
      * @param p the player to check
      */
@@ -279,9 +304,10 @@
                         Matcher matcher = REVENANT_UPGRADE_PATTERN.matcher(TextUtils.stripColor(loreLine));
                         if (matcher.matches()) { // Example: line§5§o§7Next Upgrade: §a+240❈ §8(§a14,418§7/§c15,000§8)
                             try {
-                                float percentage = Float.parseFloat(matcher.group(2).replace(",", "")) /
-                                        Integer.parseInt(matcher.group(3).replace(",", "")) * 100;
-                                BigDecimal bigDecimal = new BigDecimal(percentage).setScale(0, BigDecimal.ROUND_HALF_UP);
+                                float percentage = Float.parseFloat(matcher.group(2).replace(",", ""))
+                                        / Integer.parseInt(matcher.group(3).replace(",", "")) * 100;
+                                BigDecimal bigDecimal = new BigDecimal(percentage).setScale(0,
+                                        RoundingMode.HALF_UP);
                                 percent = bigDecimal.toString();
                                 defence = ColorCode.GREEN + matcher.group(1);
                                 break;
@@ -316,10 +342,12 @@
     }
 
     /**
-     * Detects and stores, and returns the current Skyblock inventory type. The inventory type is the kind of menu the
-     * player has open, like a crafting table or an enchanting table for example.
+     * Detects and stores, and returns the current Skyblock inventory type. The
+     * inventory type is the kind of menu the player has open, like a crafting table
+     * or an enchanting table for example.
      *
-     * @return the detected inventory type, or {@code null} if an unrecognized inventory is detected or there's no inventory open
+     * @return the detected inventory type, or {@code null} if an unrecognized
+     *         inventory is detected or there's no inventory open
      */
     public InventoryType updateInventoryType() {
         GuiScreen currentScreen = Minecraft.getMinecraft().currentScreen;
@@ -328,8 +356,15 @@
             return inventoryType = null;
         }
 
-        IInventory inventory = ((GuiChest) currentScreen).lowerChestInventory;
-
+        IInventory inventory;
+        try {
+            Field f = ((GuiChest) currentScreen).getClass().getField("lowerChestInventory");
+            f.setAccessible(true);
+            inventory = (IInventory) f.get((GuiChest) currentScreen);
+        } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) {
+            e.printStackTrace();
+            inventory = null;
+        }
 
         for (InventoryType inventoryType : InventoryType.values()) {
             if (inventoryType.getInventoryName().equals(inventory.getDisplayName().getUnformattedText())) {
Index: src/main/java/codes/biscuit/skyblockaddons/misc/scheduler/NewScheduler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/misc/scheduler/NewScheduler.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/misc/scheduler/NewScheduler.java	(date 1603996355913)
@@ -1,12 +1,13 @@
 package codes.biscuit.skyblockaddons.misc.scheduler;
 
 import net.minecraft.client.Minecraft;
-import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
-import net.minecraftforge.fml.common.gameevent.TickEvent;
 
 import java.util.ArrayList;
 import java.util.List;
 
+import cc.hyperium.event.InvokeEvent;
+import cc.hyperium.event.client.TickEvent;
+
 public class NewScheduler {
 
     private final List<ScheduledTask> queuedTasks = new ArrayList<>();
@@ -18,36 +19,34 @@
         return this.totalTicks;
     }
 
-    @SubscribeEvent
-    public void ticker(TickEvent.ClientTickEvent event) {
-        if (event.phase == TickEvent.Phase.START) {
-            synchronized (this.anchor) {
-                this.totalTicks++;
-            }
+    @InvokeEvent
+    public void ticker(TickEvent event) {
+        synchronized (this.anchor) {
+            this.totalTicks++;
+        }
 
-            if (Minecraft.getMinecraft() != null) {
-                this.pendingTasks.removeIf(ScheduledTask::isCanceled);
+        if (Minecraft.getMinecraft() != null) {
+            this.pendingTasks.removeIf(ScheduledTask::isCanceled);
 
-                this.pendingTasks.addAll(queuedTasks);
-                queuedTasks.clear();
+            this.pendingTasks.addAll(queuedTasks);
+            queuedTasks.clear();
 
-                try {
-                    for (ScheduledTask scheduledTask : this.pendingTasks) {
-                        if (this.getTotalTicks() >= (scheduledTask.getAddedTicks() + scheduledTask.getDelay())) {
-                            scheduledTask.start();
+            try {
+                for (ScheduledTask scheduledTask : this.pendingTasks) {
+                    if (this.getTotalTicks() >= (scheduledTask.getAddedTicks() + scheduledTask.getDelay())) {
+                        scheduledTask.start();
 
-                            if (scheduledTask.isRepeating()) {
-                                if (!scheduledTask.isCanceled()) {
-                                    scheduledTask.setDelay(scheduledTask.getPeriod());
-                                }
-                            } else {
-                                scheduledTask.cancel();
-                            }
-                        }
-                    }
-                } catch (Throwable ex) {
-                    ex.printStackTrace();
-                }
+                        if (scheduledTask.isRepeating()) {
+                            if (!scheduledTask.isCanceled()) {
+                                scheduledTask.setDelay(scheduledTask.getPeriod());
+                            }
+                        } else {
+                            scheduledTask.cancel();
+                        }
+                    }
+                }
+            } catch (Throwable ex) {
+                ex.printStackTrace();
             }
         }
     }
Index: src/main/java/codes/biscuit/skyblockaddons/misc/scheduler/Scheduler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/misc/scheduler/Scheduler.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/misc/scheduler/Scheduler.java	(date 1603996355928)
@@ -8,10 +8,11 @@
 import codes.biscuit.skyblockaddons.utils.objects.IntPair;
 import lombok.Getter;
 import net.minecraft.client.Minecraft;
-import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
-import net.minecraftforge.fml.common.gameevent.TickEvent;
 import org.apache.commons.lang3.mutable.MutableInt;
 
+import cc.hyperium.event.InvokeEvent;
+import cc.hyperium.event.client.TickEvent;
+
 import java.util.*;
 
 public class Scheduler {
@@ -84,31 +85,29 @@
 
     private boolean delayingMagmaCall = false; // this addition should decrease the amount of calls by a lot
 
-    @SubscribeEvent()
-    public void ticker(TickEvent.ClientTickEvent e) {
-        if (e.phase == TickEvent.Phase.START) {
-            totalTicks++;
-            Set<Command> commands = queue.get(totalTicks);
-            if (commands != null) {
-                for (Command command : commands) {
-                    for (int times = 0; times < command.getCount().getValue(); times++) {
-                        command.getCommandType().execute(command, times+1);
-                    }
-                }
-                queue.remove(totalTicks);
-            }
-            if (totalTicks % 12000 == 0 || delayingMagmaCall) { // check magma boss every 15 minutes
-                if (main.getPlayerListener().getMagmaAccuracy() != EnumUtils.MagmaTimerAccuracy.EXACTLY) {
-                    if (main.getUtils().isOnSkyblock()) {
-                        delayingMagmaCall = false;
-                        main.getUtils().fetchMagmaBossEstimate();
-                    } else if (!delayingMagmaCall) {
-                        delayingMagmaCall = true;
-                    }
-                }
-            }
-            ChromaManager.increment(); // Run every tick
-        }
+    @InvokeEvent
+    public void ticker(TickEvent e) {
+        totalTicks++;
+        Set<Command> commands = queue.get(totalTicks);
+        if (commands != null) {
+            for (Command command : commands) {
+                for (int times = 0; times < command.getCount().getValue(); times++) {
+                    command.getCommandType().execute(command, times+1);
+                }
+            }
+            queue.remove(totalTicks);
+        }
+        if (totalTicks % 12000 == 0 || delayingMagmaCall) { // check magma boss every 15 minutes
+            if (main.getPlayerListener().getMagmaAccuracy() != EnumUtils.MagmaTimerAccuracy.EXACTLY) {
+                if (main.getUtils().isOnSkyblock()) {
+                    delayingMagmaCall = false;
+                    main.getUtils().fetchMagmaBossEstimate();
+                } else if (!delayingMagmaCall) {
+                    delayingMagmaCall = true;
+                }
+            }
+        }
+        ChromaManager.increment(); // Run every tick
     }
 
     @Getter
@@ -145,8 +144,7 @@
         ERASE_UPDATE_MESSAGE,
         SET_LAST_SECOND_HEALTH,
         DELETE_RECENT_CHUNK,
-        SHOW_FULL_INVENTORY_WARNING,
-        PROCESS_UPDATE_CHECK_RESULT;
+        SHOW_FULL_INVENTORY_WARNING;
 
         public void execute(Command command, int count) {
             SkyblockAddons main = SkyblockAddons.getInstance();
@@ -183,12 +181,8 @@
                 main.getRenderListener().setTitleFeature(null);
             } else if (this == RESET_SUBTITLE_FEATURE) {
                 main.getRenderListener().setSubtitleFeature(null);
-            } else if (this == ERASE_UPDATE_MESSAGE) {
-                main.getRenderListener().setUpdateMessageDisplayed(true);
             } else if (this == SET_LAST_SECOND_HEALTH) {
                 main.getPlayerListener().setLastSecondHealth((int) commandData[0]);
-            } else if (this == PROCESS_UPDATE_CHECK_RESULT) {
-                main.getUpdater().processUpdateCheckResult();
             }
         }
     }
Index: src/main/java/codes/biscuit/skyblockaddons/gui/buttons/ButtonSlider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/gui/buttons/ButtonSlider.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/gui/buttons/ButtonSlider.java	(date 1603999661917)
@@ -53,9 +53,7 @@
         drawRect(this.xPosition, this.yPosition, this.xPosition+this.width, this.yPosition+this.height, main.getUtils().getDefaultColor(boxAlpha));
         this.mouseDragged(mc, mouseX, mouseY);
         int j = 14737632;
-        if (packedFGColour != 0) {
-            j = packedFGColour;
-        } else if (!this.enabled) {
+        if (!this.enabled) {
             j = 10526880;
         } else if (this.hovered) {
             j = 16777120;
Index: src/main/resources/pack.mcmeta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/pack.mcmeta	(date 1603899136345)
+++ src/main/resources/pack.mcmeta	(date 1603899136345)
@@ -0,0 +1,6 @@
+{
+  "pack": {
+    "description": "SBA Resources",
+    "pack_format": 1
+   }
+}
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/gui/buttons/ButtonGuiScale.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/gui/buttons/ButtonGuiScale.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/gui/buttons/ButtonGuiScale.java	(date 1603999661958)
@@ -41,9 +41,7 @@
         drawRect(this.xPosition, this.yPosition, this.xPosition+this.width, this.yPosition+this.height, main.getUtils().getDefaultColor(boxAlpha));
         this.mouseDragged(mc, mouseX, mouseY);
         int j = 14737632;
-        if (packedFGColour != 0) {
-            j = packedFGColour;
-        } else if (!this.enabled) {
+        if (!this.enabled) {
             j = 10526880;
         } else if (this.hovered) {
             j = 16777120;
Index: src/main/java/codes/biscuit/skyblockaddons/Reflector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/Reflector.java	(date 1603994544145)
+++ src/main/java/codes/biscuit/skyblockaddons/Reflector.java	(date 1603994544145)
@@ -0,0 +1,52 @@
+package codes.biscuit.skyblockaddons;
+
+import java.lang.reflect.Field;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+/**
+ * Does reflection. What did you expect?
+ */
+public final class Reflector {
+    public static Object getFieldValue(Class<?> clazz, Object classInstance, String field) {
+        Object o;
+        try {
+            Field f = clazz.getDeclaredField(field);
+            if (!f.isAccessible()) {
+                f.setAccessible(true);
+            }
+            o = f.get(classInstance);
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            e.printStackTrace();
+            o = null;
+        }
+        return o;
+    }
+
+    public static void setFieldValue(Class<?> clazz, Object classInstance, String field, Object value) {
+        try {
+            Field f = clazz.getDeclaredField(field);
+            if (!f.isAccessible()) {
+                f.setAccessible(true);
+            }
+            f.set(classInstance, value);
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            e.printStackTrace();
+        }
+    }
+
+    public static Object invoke(Class<?> clazz, Object classInstance, String method, Class<?>[] methodParamTypes, Object[] params) {
+        Object o;
+        try {
+            Method m = clazz.getDeclaredMethod(method, methodParamTypes);
+            if (!m.isAccessible()) {
+                m.setAccessible(true);
+            }
+            o = m.invoke(classInstance, params);
+        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {
+            e.printStackTrace();
+            o = null;
+        }
+        return o;
+    }
+}
Index: src/main/java/codes/biscuit/skyblockaddons/gui/SettingsGui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/gui/SettingsGui.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/gui/SettingsGui.java	(date 1603996355725)
@@ -6,16 +6,16 @@
 import codes.biscuit.skyblockaddons.core.Message;
 import codes.biscuit.skyblockaddons.gui.buttons.*;
 import codes.biscuit.skyblockaddons.utils.*;
-import codes.biscuit.skyblockaddons.features.discordrpc.DiscordStatus;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiButton;
 import net.minecraft.client.gui.GuiScreen;
 import net.minecraft.client.gui.ScaledResolution;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.util.ResourceLocation;
-import net.minecraftforge.client.GuiIngameForge;
 import org.lwjgl.input.Keyboard;
 
+import cc.hyperium.mixinsimp.gui.HyperiumGuiIngame;
+
 import java.awt.*;
 import java.io.IOException;
 import java.util.Arrays;
@@ -135,26 +135,6 @@
             int width = halfWidth+90+boxWidth;
             width -= x;
             float numSettings = settings.size();
-            if (settings.contains(EnumUtils.FeatureSetting.DISCORD_RP_STATE)) {
-                if (main.getConfigValues().getDiscordStatus() == DiscordStatus.CUSTOM) numSettings++;
-                if (main.getConfigValues().getDiscordStatus() == DiscordStatus.AUTO_STATUS) {
-                    numSettings ++;
-                    if (main.getConfigValues().getDiscordAutoDefault() == DiscordStatus.CUSTOM) {
-                        numSettings ++;
-                    }
-                }
-                numSettings += 0.4;
-            }
-            if (settings.contains(EnumUtils.FeatureSetting.DISCORD_RP_DETAILS)) {
-                if (main.getConfigValues().getDiscordDetails() == DiscordStatus.CUSTOM) numSettings++;
-                if (main.getConfigValues().getDiscordDetails() == DiscordStatus.AUTO_STATUS) {
-                    numSettings ++;
-                    if (main.getConfigValues().getDiscordAutoDefault() == DiscordStatus.CUSTOM) {
-                        numSettings ++;
-                    }
-                }
-                numSettings += 0.4;
-            }
             int height = (int)(getRowHeightSetting(numSettings)-50);
             int y =(int)getRowHeight(1);
             GlStateManager.enableBlend();
@@ -177,7 +157,6 @@
             Language language = ((ButtonLanguage)abstractButton).getLanguage();
             main.getConfigValues().setLanguage(language);
             main.getUtils().loadLanguageFile(true);
-            main.setKeyBindingDescriptions();
             returnToGui();
         } else if (abstractButton instanceof ButtonSwitchTab) {
             ButtonSwitchTab tab = (ButtonSwitchTab)abstractButton;
@@ -194,9 +173,9 @@
             } else {
                 main.getConfigValues().getDisabledFeatures().add(feature);
                 if (feature == Feature.HIDE_FOOD_ARMOR_BAR) { // Reset the vanilla bars when disabling these two features.
-                    GuiIngameForge.renderArmor = true; // The food gets automatically enabled, no need to include it.
+                    HyperiumGuiIngame.renderArmor = true; // The food gets automatically enabled, no need to include it.
                 } else if (feature == Feature.HIDE_HEALTH_BAR) {
-                    GuiIngameForge.renderHealth = true;
+                    HyperiumGuiIngame.renderHealth = true;
                 } else if (feature == Feature.REPEAT_FULL_INVENTORY_WARNING) {
                     // Remove queued warnings when the repeat setting is turned off.
                     main.getScheduler().removeQueuedFullInventoryWarnings();
@@ -304,64 +283,6 @@
             boxWidth = 140;
             x = halfWidth-(boxWidth/2);
             buttonList.add(new ButtonSolid(x, y, 140, 20, Message.SETTING_POWER_ORB_DISPLAY_STYLE.getMessage(), main, feature));
-        } else if(setting == EnumUtils.FeatureSetting.DISCORD_RP_DETAILS || setting == EnumUtils.FeatureSetting.DISCORD_RP_STATE) {
-            boxWidth = 140;
-            x = halfWidth-(boxWidth/2);
-            DiscordStatus currentStatus;
-            if(setting == EnumUtils.FeatureSetting.DISCORD_RP_STATE) {
-                currentStatus = main.getConfigValues().getDiscordStatus();
-            } else {
-                currentStatus = main.getConfigValues().getDiscordDetails();
-            }
-
-            buttonList.add(new ButtonTextNew(halfWidth, (int)y-10, setting == EnumUtils.FeatureSetting.DISCORD_RP_DETAILS ? Message.MESSAGE_FIRST_STATUS.getMessage() :
-                    Message.MESSAGE_SECOND_STATUS.getMessage(), true, 0xFFFFFFFF));
-            buttonList.add(new ButtonSelect(x, (int)y, boxWidth, 20, Arrays.asList(DiscordStatus.values()), currentStatus.ordinal(), index -> {
-                final DiscordStatus selectedStatus = DiscordStatus.values()[index];
-                if(setting == EnumUtils.FeatureSetting.DISCORD_RP_STATE) {
-                    main.getDiscordRPCManager().setStateLine(selectedStatus);
-                    main.getConfigValues().setDiscordStatus(selectedStatus);
-                } else {
-                    main.getDiscordRPCManager().setDetailsLine(selectedStatus);
-                    main.getConfigValues().setDiscordDetails(selectedStatus);
-                }
-                SettingsGui.this.reInit = true;
-            }));
-
-            if (currentStatus == DiscordStatus.AUTO_STATUS) {
-                row++;
-                row += 0.4;
-                boxWidth = 140;
-                x = halfWidth-(boxWidth/2);
-                y = getRowHeightSetting(row);
-
-                buttonList.add(new ButtonTextNew(halfWidth, (int)y-10, Message.MESSAGE_FALLBACK_STATUS.getMessage(), true, 0xFFFFFFFF));
-                currentStatus = main.getConfigValues().getDiscordAutoDefault();
-                buttonList.add(new ButtonSelect(x, (int)y, boxWidth, 20, Arrays.asList(DiscordStatus.values()), currentStatus.ordinal(), index -> {
-                    final DiscordStatus selectedStatus = DiscordStatus.values()[index];
-                    main.getConfigValues().setDiscordAutoDefault(selectedStatus);
-                    SettingsGui.this.reInit = true;
-                }));
-            }
-
-            if (currentStatus == DiscordStatus.CUSTOM) {
-                row++;
-                halfWidth = width/2;
-                boxWidth = 200;
-                x = halfWidth-(boxWidth/2);
-                y = getRowHeightSetting(row);
-
-                EnumUtils.DiscordStatusEntry discordStatusEntry = EnumUtils.DiscordStatusEntry.DETAILS;
-                if (setting == EnumUtils.FeatureSetting.DISCORD_RP_STATE) {
-                    discordStatusEntry = EnumUtils.DiscordStatusEntry.STATE;
-                }
-                final EnumUtils.DiscordStatusEntry finalDiscordStatusEntry = discordStatusEntry;
-                ButtonInputFieldWrapper inputField = new ButtonInputFieldWrapper(x, (int) y, 200, 20, main.getConfigValues().getCustomStatus(discordStatusEntry),
-                        null, 100, false, updatedValue -> main.getConfigValues().setCustomStatus(finalDiscordStatusEntry, updatedValue));
-                buttonList.add(inputField);
-            }
-
-            row += 0.4;
         } else {
             boxWidth = 31; // Default size and stuff.
             x = halfWidth-(boxWidth/2);
Index: src/main/java/codes/biscuit/skyblockaddons/gui/SkyblockAddonsGui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/gui/SkyblockAddonsGui.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/gui/SkyblockAddonsGui.java	(date 1603996355850)
@@ -16,10 +16,11 @@
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.texture.TextureManager;
 import net.minecraft.util.ResourceLocation;
-import net.minecraftforge.client.GuiIngameForge;
 import org.apache.commons.lang3.StringUtils;
 import org.lwjgl.input.Keyboard;
 
+import cc.hyperium.mixinsimp.gui.HyperiumGuiIngame;
+
 import java.awt.*;
 import java.io.IOException;
 import java.net.URI;
@@ -223,22 +224,18 @@
                 if (main.getConfigValues().isRemoteDisabled(feature)) return;
                 if (main.getConfigValues().isDisabled(feature)) {
                     main.getConfigValues().getDisabledFeatures().remove(feature);
-                    if(feature == Feature.DISCORD_RPC) {
-                        main.getDiscordRPCManager().start();
-                    } else if (feature == Feature.ZEALOT_COUNTER_EXPLOSIVE_BOW_SUPPORT) {
+                    if (feature == Feature.ZEALOT_COUNTER_EXPLOSIVE_BOW_SUPPORT) {
                         main.getConfigValues().getDisabledFeatures().remove(Feature.DISABLE_ENDERMAN_TELEPORTATION_EFFECT);
                     }
                 } else {
                     main.getConfigValues().getDisabledFeatures().add(feature);
                     if (feature == Feature.HIDE_FOOD_ARMOR_BAR) { // Reset the vanilla bars when disabling these two features.
-                        GuiIngameForge.renderArmor = true; // The food gets automatically enabled, no need to include it.
+                        HyperiumGuiIngame.renderArmor = true; // The food gets automatically enabled, no need to include it.
                     } else if (feature == Feature.HIDE_HEALTH_BAR) {
-                        GuiIngameForge.renderHealth = true;
+                        HyperiumGuiIngame.renderHealth = true;
                     } else if (feature == Feature.FULL_INVENTORY_WARNING) {
                         main.getInventoryUtils().setInventoryWarningShown(false);
                         main.getScheduler().removeQueuedFullInventoryWarnings();
-                    } else if(feature == Feature.DISCORD_RPC) {
-                        main.getDiscordRPCManager().stop();
                     } else if (feature == Feature.DISABLE_ENDERMAN_TELEPORTATION_EFFECT) {
                         main.getConfigValues().getDisabledFeatures().remove(Feature.ZEALOT_COUNTER_EXPLOSIVE_BOW_SUPPORT);
                     }
Index: src/main/java/codes/biscuit/skyblockaddons/asm/utils/TransformerField.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/utils/TransformerField.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/utils/TransformerField.java	(date 1603996355303)
@@ -1,8 +1,8 @@
 package codes.biscuit.skyblockaddons.asm.utils;
 
 import codes.biscuit.skyblockaddons.tweaker.PreTransformationChecks;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.FieldInsnNode;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public enum TransformerField {
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/utils/TransformerMethod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/utils/TransformerMethod.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/utils/TransformerMethod.java	(date 1603996630390)
@@ -1,9 +1,9 @@
 package codes.biscuit.skyblockaddons.asm.utils;
 
 import codes.biscuit.skyblockaddons.tweaker.PreTransformationChecks;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.MethodInsnNode;
-import org.objectweb.asm.tree.MethodNode;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.MethodInsnNode;
+import org.spongepowered.asm.lib.tree.MethodNode;
 
 public enum TransformerMethod {
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/hooks/PlayerControllerMPHook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/hooks/PlayerControllerMPHook.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/hooks/PlayerControllerMPHook.java	(date 1603996355288)
@@ -1,5 +1,6 @@
 package codes.biscuit.skyblockaddons.asm.hooks;
 
+import codes.biscuit.skyblockaddons.Reflector;
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.asm.utils.ReturnValue;
 import codes.biscuit.skyblockaddons.core.Feature;
@@ -11,7 +12,6 @@
 import codes.biscuit.skyblockaddons.features.cooldowns.CooldownManager;
 import codes.biscuit.skyblockaddons.features.craftingpatterns.CraftingPattern;
 import codes.biscuit.skyblockaddons.features.craftingpatterns.CraftingPatternResult;
-import codes.biscuit.skyblockaddons.utils.EnumUtils;
 import codes.biscuit.skyblockaddons.utils.InventoryUtils;
 import codes.biscuit.skyblockaddons.utils.ItemUtils;
 import codes.biscuit.skyblockaddons.utils.Utils;
@@ -238,7 +238,7 @@
                                 returnValue.cancel();
                             }
                         } else {
-                            if (slotIn.getSlotIndex() == CraftingPattern.CRAFTING_RESULT_INDEX
+                            if ((int) Reflector.getFieldValue(Slot.class, slotIn, "slotIndex") == CraftingPattern.CRAFTING_RESULT_INDEX
                                     && !result.isSatisfied()
                                     && main.getPersistentValues().isBlockCraftingIncompletePatterns()) {
                                 // cancel clicking the result if the pattern isn't satisfied
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ build.gradle	(date 1605113128712)
@@ -1,99 +1,45 @@
+buildscript {
+    repositories {
+        maven { url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/sponge-proxy/" }
+        maven { url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/forge-proxy/" }
+        maven { url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/gradle-plugin-proxy/" }
+    }
+    dependencies {
+        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
+        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
+    }
+}
+
 plugins {
-    id 'java'
-    id 'net.minecraftforge.gradle.forge' version '2.1-SNAPSHOT'
     id 'io.franzbecker.gradle-lombok' version '4.0.0'
-    id 'com.github.johnrengelman.shadow' version '4.0.4'
 }
 
-group = 'codes.biscuit'
+apply plugin: 'net.minecraftforge.gradle.tweaker-client'
+apply plugin: 'org.spongepowered.mixin'
+apply plugin: 'java'
 
-// The below line is for version checkers <= 1.4.2
-//version = "1.5.4"
+group 'hjb.ext'
+version '1.0-SNAPSHOT'
 
-// Java plugin settings
-sourceCompatibility = JavaVersion.VERSION_1_8
-targetCompatibility = JavaVersion.VERSION_1_8
-compileJava.options.encoding = 'UTF-8'
+sourceCompatibility = 1.8
+targetCompatibility = 1.8
 
-sourceSets {
-    main {
-        output.resourcesDir = java.outputDir
-    }
+compileJava.options.encoding = "utf-8"
+
+mixin {
+    add sourceSets.main, "mixin.skyblockaddons.refmap.json"
 }
 
 minecraft {
-    version = "${project.minecraftVersion}-${project.forgeVersion}"
-    runDir = "run"
-
-    mappings = "${project.mappings}"
-
-    // Replace placeholders in source code
-    replace("@MOD_ID@": project.modId,
-            "@MOD_NAME@": project.modName,
-            "@VERSION@": project.version,
-            "@MOD_ACCEPTED@": project.acceptedMinecraftVersions,
-            "@UPDATE_JSON@": project.updateJSON)
-    replaceIn("${project.modName}.java")
+    version = "1.8.9"
+    tweakClass = "cc.hyperium.launch.HyperiumTweaker"
+    mappings = "stable_20"
+    runDir = 'run'
+    makeObfSourceJar = false
 }
 
-repositories {
-    maven {
-        name 'JitPack'
-        url 'https://jitpack.io'
-    }
-}
+repositories { maven { url 'https://jitpack.io' } }
 
 dependencies {
-    // Discord RPC for Java https://github.com/jagrosh/DiscordIPC
-    implementation('com.github.jagrosh:DiscordIPC:e29d6d8') {
-        exclude module: 'log4j'
-    }
+    compile 'com.github.hyperiumjailbreak:client:master-SNAPSHOT'
 }
-
-jar {
-    // Set the archive name here instead of in shadowJar because ForgeGradle needs it when re-obfuscating the jar.
-    archiveName = project.modName + "-" + version + "-for-MC-1.8.9.jar"
-    // Disable the default jar task and use shadowJar instead to shade the libraries into the jar.
-    enabled = false
-}
-
-shadowJar {
-    archiveName = tasks.jar.archiveName
-    classifier = ''
-    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
-
-    manifest.attributes(
-            'Main-Class': 'SkyblockAddonsInstallerFrame',
-            'FMLCorePlugin': "${project.group}.${project.modId}.tweaker.${project.modName}LoadingPlugin",
-            'ForceLoadAsMod': true,
-            'FMLCorePluginContainsFMLMod': true,
-            'ModSide': 'CLIENT',
-            'FMLAT': "${project.modId}_at.cfg"
-    )
-
-    exclude('dummyThing')
-    exclude('META-INF/maven/')
-    exclude('META-INF/nar/')
-    exclude('module-info.class')
-    exclude('META-INF/versions/')
-}
-
-processResources {
-    inputs.property "version", project.version
-    inputs.property "mcversion", project.minecraft.version
-
-    // replace stuff in mcmod.info, nothing else
-    from(sourceSets.main.resources.srcDirs) {
-        include 'mcmod.info'
-
-        // replace version and mcversion
-        expand 'version':project.version, 'mcversion':project.minecraft.version
-    }
-
-    // copy everything else, thats not the mcmod.info
-    from(sourceSets.main.resources.srcDirs) {
-        exclude 'mcmod.info'
-    }
-}
-
-tasks.reobfJar.dependsOn(tasks.shadowJar)
\ No newline at end of file
Index: src/main/resources/addon.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/addon.json	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/resources/addon.json	(date 1603996356209)
@@ -1,6 +1,6 @@
 {
-  "uuid": "%uuid%",
   "name": "SkyblockAddons",
-  "mainClass": "codes.biscuit.skyblockaddons.SkyblockAddonsLabyAddon",
+  "version": "1.0.0",
+  "mainClass": "codes.biscuit.skyblockaddons.SkyblockAddons",
   "transformerClass": "codes.biscuit.skyblockaddons.tweaker.SkyblockAddonsTransformer"
 }
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/listeners/PlayerListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/listeners/PlayerListener.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/listeners/PlayerListener.java	(date 1603996355881)
@@ -1,5 +1,6 @@
 package codes.biscuit.skyblockaddons.listeners;
 
+import codes.biscuit.skyblockaddons.Reflector;
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.asm.hooks.GuiChestHook;
 import codes.biscuit.skyblockaddons.core.Attribute;
@@ -8,7 +9,6 @@
 import codes.biscuit.skyblockaddons.core.Message;
 import codes.biscuit.skyblockaddons.core.npc.NPCUtils;
 import codes.biscuit.skyblockaddons.features.BaitManager;
-import codes.biscuit.skyblockaddons.features.EnchantedItemBlacklist;
 import codes.biscuit.skyblockaddons.features.EndstoneProtectorManager;
 import codes.biscuit.skyblockaddons.features.backpacks.Backpack;
 import codes.biscuit.skyblockaddons.features.backpacks.BackpackManager;
@@ -35,7 +35,6 @@
 import net.minecraft.entity.monster.EntityEnderman;
 import net.minecraft.entity.monster.EntityMagmaCube;
 import net.minecraft.entity.monster.EntitySlime;
-import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.projectile.EntityArrow;
 import net.minecraft.entity.projectile.EntityFishHook;
 import net.minecraft.init.Items;
@@ -48,31 +47,28 @@
 import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.EnumChatFormatting;
 import net.minecraft.util.Vec3;
-import net.minecraftforge.client.event.ClientChatReceivedEvent;
-import net.minecraftforge.client.event.GuiOpenEvent;
-import net.minecraftforge.client.event.GuiScreenEvent;
-import net.minecraftforge.event.entity.EntityEvent;
-import net.minecraftforge.event.entity.EntityJoinWorldEvent;
-import net.minecraftforge.event.entity.living.EnderTeleportEvent;
-import net.minecraftforge.event.entity.living.LivingDeathEvent;
-import net.minecraftforge.event.entity.living.LivingEvent;
-import net.minecraftforge.event.entity.player.AttackEntityEvent;
-import net.minecraftforge.event.entity.player.FillBucketEvent;
-import net.minecraftforge.event.entity.player.ItemTooltipEvent;
-import net.minecraftforge.event.entity.player.PlayerInteractEvent;
-import net.minecraftforge.event.world.ChunkEvent;
-import net.minecraftforge.fml.common.eventhandler.EventPriority;
-import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
-import net.minecraftforge.fml.common.gameevent.InputEvent;
-import net.minecraftforge.fml.common.gameevent.TickEvent;
 import org.lwjgl.input.Keyboard;
 
+import cc.hyperium.event.InvokeEvent;
+import cc.hyperium.event.Priority;
+import cc.hyperium.event.client.TickEvent;
+import cc.hyperium.event.entity.EntityEnterChunkEvent;
+import cc.hyperium.event.entity.EntityJoinWorldEvent;
+import cc.hyperium.event.entity.LivingDeathEvent;
+import cc.hyperium.event.entity.LivingEntityUpdateEvent;
+import cc.hyperium.event.entity.PlayerAttackEntityEvent;
+import cc.hyperium.event.gui.GuiOpenEvent;
+import cc.hyperium.event.interact.KeypressEvent;
+import cc.hyperium.event.interact.RightMouseClickEvent;
+import cc.hyperium.event.network.chat.ServerChatEvent;
+import cc.hyperium.event.world.ChunkLoadEvent;
+import cc.hyperium.event.world.item.ItemTooltipEvent;
+
 import java.util.*;
 import java.util.concurrent.ThreadLocalRandom;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-//TODO Fix for Hypixel localization
 public class PlayerListener {
 
     private static final Pattern NO_ARROWS_LEFT_PATTERN = Pattern.compile("(?:§r)?§cYou don't have any more Arrows left in your Quiver!§r");
@@ -111,9 +107,9 @@
     private boolean oldBobberIsInWater;
     private double oldBobberPosY = 0;
 
-    @Getter private Set<UUID> countedEndermen = new HashSet<>();
+    @Getter private final Set<UUID> countedEndermen = new HashSet<>();
 
-    @Getter private Set<IntPair> recentlyLoadedChunks = new HashSet<>();
+    @Getter private final Set<IntPair> recentlyLoadedChunks = new HashSet<>();
 
     @Getter @Setter private EnumUtils.MagmaTimerAccuracy magmaAccuracy = EnumUtils.MagmaTimerAccuracy.NO_DATA;
     @Getter @Setter private int magmaTime = 0;
@@ -126,9 +122,9 @@
     /**
      * Reset all the timers and stuff when joining a new world.
      */
-    @SubscribeEvent()
+    @InvokeEvent
     public void onWorldJoin(EntityJoinWorldEvent e) {
-        Entity entity = e.entity;
+        Entity entity = e.getEntity();
 
         if (entity == Minecraft.getMinecraft().thePlayer) {
             lastWorldJoin = System.currentTimeMillis();
@@ -153,8 +149,8 @@
     /**
      * Keep track of recently loaded chunks for the magma boss timer.
      */
-    @SubscribeEvent()
-    public void onChunkLoad(ChunkEvent.Load e) {
+    @InvokeEvent
+    public void onChunkLoad(ChunkLoadEvent e) {
         if (main.getUtils().isOnSkyblock()) {
             int x = e.getChunk().xPosition;
             int z = e.getChunk().zPosition;
@@ -168,20 +164,17 @@
      * Interprets the action bar to extract mana, health, and defence. Enables/disables mana/health prediction,
      * and looks for mana usage messages in chat while predicting.
      */
-    @SubscribeEvent(priority = EventPriority.HIGH)
-    public void onChatReceive(ClientChatReceivedEvent e) {
-        String unformattedText = e.message.getUnformattedText();
+    @InvokeEvent(priority = Priority.HIGH)
+    public void onChatReceive(ServerChatEvent e) {
+        String unformattedText = e.getChat().getUnformattedText();
 
         // Type 2 means it's an action bar message.
-        if (e.type == 2) {
+        if (e.getType() == 2) {
             // Parse using ActionBarParser and display the rest message instead
             String restMessage = actionBarParser.parseActionBar(unformattedText);
-            if (main.isUsingOofModv1() && restMessage.trim().length() == 0) {
-                e.setCanceled(true);
-            }
-            e.message = new ChatComponentText(restMessage);
+            e.setChat(new ChatComponentText(restMessage));
         } else {
-            String formattedText = e.message.getFormattedText();
+            String formattedText = e.getChat().getFormattedText();
 
             Matcher matcher;
 
@@ -210,7 +203,7 @@
                 }
                 if (main.getConfigValues().isEnabled(Feature.ZEALOT_COUNTER)) {
                     // Edit the message to include counter.
-                    e.message = new ChatComponentText(formattedText + ColorCode.GRAY + " (" + main.getPersistentValues().getKills() + ")");
+                    e.setChat(new ChatComponentText(formattedText + ColorCode.GRAY + " (" + main.getPersistentValues().getKills() + ")"));
                 }
                 main.getPersistentValues().addEyeResetKills();
 
@@ -220,10 +213,10 @@
                 main.getScheduler().schedule(Scheduler.CommandType.RESET_TITLE_FEATURE, main.getConfigValues().getWarningSeconds());
 
             }  else if (main.getConfigValues().isEnabled(Feature.DISABLE_MAGICAL_SOUP_MESSAGES) && SOUP_RANDOM_MESSAGES.contains(unformattedText)) {
-                e.setCanceled(true);
+                e.setCancelled(true);
 
             } else if (main.getConfigValues().isEnabled(Feature.DISABLE_TELEPORT_PAD_MESSAGES) && (formattedText.startsWith("§r§aWarped from ") || formattedText.equals("§r§cThis Teleport Pad does not have a destination set!§r"))) {
-                e.setCanceled(true);
+                e.setCancelled(true);
 
             } else if (formattedText.startsWith("§7Sending to server ")) {
                 lastSkyblockServerJoinAttempt = System.currentTimeMillis();
@@ -290,12 +283,12 @@
      * This blocks interaction with Ember Rods on your island, to avoid blowing up chests, and placing enchanted items
      * such as enchanted gold blocks.
      */
-    @SubscribeEvent()
-    public void onInteract(PlayerInteractEvent e) {
+    @InvokeEvent
+    public void onInteract(RightMouseClickEvent e) {
         Minecraft mc = Minecraft.getMinecraft();
-        ItemStack heldItem = e.entityPlayer.getHeldItem();
+        ItemStack heldItem = mc.thePlayer.getHeldItem();
 
-        if (main.getUtils().isOnSkyblock() && e.entityPlayer == mc.thePlayer && heldItem != null) {
+        if (main.getUtils().isOnSkyblock() && heldItem != null) {
             if (heldItem.getItem() == Items.skull) {
                 Backpack backpack = BackpackManager.getFromItem(heldItem);
                 if (backpack != null) {
@@ -304,8 +297,7 @@
             }
 
             // Update fishing status
-            if (heldItem.getItem().equals(Items.fishing_rod)
-                    && (e.action == PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK || e.action == PlayerInteractEvent.Action.RIGHT_CLICK_AIR)) {
+            if (heldItem.getItem().equals(Items.fishing_rod)) {
                 if (main.getConfigValues().isEnabled(Feature.FISHING_SOUND_INDICATOR)) {
                     oldBobberIsInWater = false;
                     lastBobberEnteredWater = Long.MAX_VALUE;
@@ -314,31 +306,6 @@
                 if (main.getConfigValues().isEnabled(Feature.SHOW_ITEM_COOLDOWNS) && mc.thePlayer.fishEntity != null) {
                     CooldownManager.put(mc.thePlayer.getHeldItem());
                 }
-            } else if (EnchantedItemBlacklist.shouldBlockUsage(heldItem, e.action)) {
-                e.setCanceled(true);
-            }
-        }
-    }
-
-    /**
-     * Block emptying of buckets separately because they aren't handled like blocks.
-     * The event name {@code FillBucketEvent} is misleading. The event is fired when buckets are emptied also so
-     * it should really be called {@code BucketEvent}.
-     *
-     * @param bucketEvent the event
-     */
-    @SubscribeEvent
-    public void onBucketEvent(FillBucketEvent bucketEvent) {
-        ItemStack bucket = bucketEvent.current;
-        EntityPlayer player = bucketEvent.entityPlayer;
-
-        if (main.getUtils().isOnSkyblock() && player instanceof EntityPlayerSP) {
-            if (main.getConfigValues().isEnabled(Feature.AVOID_PLACING_ENCHANTED_ITEMS)) {
-                String skyblockItemId = ItemUtils.getSkyBlockItemID(bucket);
-
-                if (skyblockItemId != null && skyblockItemId.equals("ENCHANTED_LAVA_BUCKET")) {
-                    bucketEvent.setCanceled(true);
-                }
             }
         }
     }
@@ -346,79 +313,77 @@
     /**
      * The main timer for a bunch of stuff.
      */
-    @SubscribeEvent()
-    public void onTick(TickEvent.ClientTickEvent e) {
-        if (e.phase == TickEvent.Phase.START) {
-            timerTick++;
-            Minecraft mc = Minecraft.getMinecraft();
-            if (mc != null) { // Predict health every tick if needed.
+    @InvokeEvent
+    public void onTick(TickEvent e) {
+        timerTick++;
+        Minecraft mc = Minecraft.getMinecraft();
+        if (mc != null) { // Predict health every tick if needed.
 
-                if (actionBarParser.getHealthUpdate() != null && System.currentTimeMillis() - actionBarParser.getLastHealthUpdate() > 3000) {
-                    actionBarParser.setHealthUpdate(null);
-                }
-                if (main.getRenderListener().isPredictHealth()) {
-                    EntityPlayerSP p = mc.thePlayer;
-                    if (p != null) { //Reverse calculate the player's health by using the player's vanilla hearts. Also calculate the health change for the gui item.
-                        int newHealth = Math.round(getAttribute(Attribute.MAX_HEALTH) * (p.getHealth() / p.getMaxHealth()));
-                        main.getScheduler().schedule(Scheduler.CommandType.SET_LAST_SECOND_HEALTH, 1, newHealth);
-                        if (actionBarParser.getLastSecondHealth() != -1 && actionBarParser.getLastSecondHealth() != newHealth) {
-                            actionBarParser.setHealthUpdate(newHealth - actionBarParser.getLastSecondHealth());
-                            actionBarParser.setLastHealthUpdate(System.currentTimeMillis());
-                        }
-                        setAttribute(Attribute.HEALTH, newHealth);
-                    }
-                }
-                if (shouldTriggerFishingIndicator()) { // The logic fits better in its own function
-                    main.getUtils().playLoudSound("random.successful_hit", 0.8);
-                }
-                if (timerTick == 20) { // Add natural mana every second (increase is based on your max mana).
-                    if (main.getRenderListener().isPredictMana()) {
-                        changeMana(getAttribute(Attribute.MAX_MANA) / 50);
-                        if (getAttribute(Attribute.MANA) > getAttribute(Attribute.MAX_MANA))
-                            setAttribute(Attribute.MANA, getAttribute(Attribute.MAX_MANA));
-                    }
+            if (actionBarParser.getHealthUpdate() != null && System.currentTimeMillis() - actionBarParser.getLastHealthUpdate() > 3000) {
+                actionBarParser.setHealthUpdate(null);
+            }
+            if (main.getRenderListener().isPredictHealth()) {
+                EntityPlayerSP p = mc.thePlayer;
+                if (p != null) { //Reverse calculate the player's health by using the player's vanilla hearts. Also calculate the health change for the gui item.
+                    int newHealth = Math.round(getAttribute(Attribute.MAX_HEALTH) * (p.getHealth() / p.getMaxHealth()));
+                    main.getScheduler().schedule(Scheduler.CommandType.SET_LAST_SECOND_HEALTH, 1, newHealth);
+                    if (actionBarParser.getLastSecondHealth() != -1 && actionBarParser.getLastSecondHealth() != newHealth) {
+                        actionBarParser.setHealthUpdate(newHealth - actionBarParser.getLastSecondHealth());
+                        actionBarParser.setLastHealthUpdate(System.currentTimeMillis());
+                    }
+                    setAttribute(Attribute.HEALTH, newHealth);
+                }
+            }
+            if (shouldTriggerFishingIndicator()) { // The logic fits better in its own function
+                main.getUtils().playLoudSound("random.successful_hit", 0.8);
+            }
+            if (timerTick == 20) { // Add natural mana every second (increase is based on your max mana).
+                if (main.getRenderListener().isPredictMana()) {
+                    changeMana(getAttribute(Attribute.MAX_MANA) / 50);
+                    if (getAttribute(Attribute.MANA) > getAttribute(Attribute.MAX_MANA))
+                        setAttribute(Attribute.MANA, getAttribute(Attribute.MAX_MANA));
+                }
 
-                    if (main.getUtils().isOnSkyblock() && main.getConfigValues().isEnabled(Feature.TAB_EFFECT_TIMERS)) {
-                        TabEffectManager.getInstance().updatePotionEffects();
-                    }
-                } else if (timerTick % 5 == 0) { // Check inventory, location, updates, and skeleton helmet every 1/4 second.
-                    EntityPlayerSP p = mc.thePlayer;
-                    if (p != null) {
-                        EndstoneProtectorManager.checkGolemStatus();
-                        main.getUtils().checkGameLocationDate();
-                        main.getInventoryUtils().checkIfInventoryIsFull(mc, p);
+                if (main.getUtils().isOnSkyblock() && main.getConfigValues().isEnabled(Feature.TAB_EFFECT_TIMERS)) {
+                    TabEffectManager.getInstance().updatePotionEffects();
+                }
+            } else if (timerTick % 5 == 0) { // Check inventory, location, updates, and skeleton helmet every 1/4 second.
+                EntityPlayerSP p = mc.thePlayer;
+                if (p != null) {
+                    EndstoneProtectorManager.checkGolemStatus();
+                    main.getUtils().checkGameLocationDate();
+                    main.getInventoryUtils().checkIfInventoryIsFull(mc, p);
 
-                        if (main.getUtils().isOnSkyblock()) {
-                            main.getInventoryUtils().checkIfWearingSkeletonHelmet(p);
-                            main.getInventoryUtils().checkIfUsingToxicArrowPoison(p);
-                            main.getInventoryUtils().checkIfWearingSlayerArmor(p);
-                        }
+                    if (main.getUtils().isOnSkyblock()) {
+                        main.getInventoryUtils().checkIfWearingSkeletonHelmet(p);
+                        main.getInventoryUtils().checkIfUsingToxicArrowPoison(p);
+                        main.getInventoryUtils().checkIfWearingSlayerArmor(p);
+                    }
 
-                        if (mc.currentScreen == null && main.getConfigValues().isEnabled(Feature.ITEM_PICKUP_LOG)
-                                && main.getPlayerListener().didntRecentlyJoinWorld()) {
-                            main.getInventoryUtils().getInventoryDifference(p.inventory.mainInventory);
-                        }
-                        if (main.getConfigValues().isEnabled(Feature.BAIT_LIST) && BaitManager.getInstance().isHoldingRod()) {
-                            BaitManager.getInstance().refreshBaits();
-                        }
-                    }
+                    if (mc.currentScreen == null && main.getConfigValues().isEnabled(Feature.ITEM_PICKUP_LOG)
+                            && main.getPlayerListener().didntRecentlyJoinWorld()) {
+                        main.getInventoryUtils().getInventoryDifference(p.inventory.mainInventory);
+                    }
+                    if (main.getConfigValues().isEnabled(Feature.BAIT_LIST) && BaitManager.getInstance().isHoldingRod()) {
+                        BaitManager.getInstance().refreshBaits();
+                    }
+                }
 
-                    main.getInventoryUtils().cleanUpPickupLog();
+                main.getInventoryUtils().cleanUpPickupLog();
 
-                } else if (timerTick > 20) { // To keep the timer going from 1 to 21 only.
-                    timerTick = 1;
-                }
+            } else if (timerTick > 20) { // To keep the timer going from 1 to 21 only.
+                timerTick = 1;
             }
         }
     }
 
-    @SubscribeEvent
-    public void onEntityEvent(LivingEvent.LivingUpdateEvent e) {
+    @InvokeEvent
+    public void onEntityEvent(LivingEntityUpdateEvent e) {
         if (!main.getUtils().isOnSkyblock()) {
             return;
         }
 
-        Entity entity = e.entity;
+        Entity entity = e.getLivingBase();
 
         if (entity instanceof EntityOtherPlayerMP && main.getConfigValues().isEnabled(Feature.HIDE_PLAYERS_NEAR_NPCS) && entity.ticksExisted < 5) {
             float health = ((EntityOtherPlayerMP) entity).getHealth();
@@ -465,30 +430,30 @@
         }
     }
 
-    @SubscribeEvent
-    public void onAttack(AttackEntityEvent e) {
-        if (e.target instanceof EntityEnderman) {
-            if (isZealot(e.target)) {
-                countedEndermen.add(e.target.getUniqueID());
+    @InvokeEvent
+    public void onAttack(PlayerAttackEntityEvent e) {
+        if (e.getEntity() instanceof EntityEnderman) {
+            if (isZealot(e.getEntity())) {
+                countedEndermen.add(e.getEntity().getUniqueID());
             }
         }
     }
 
-    @Getter private TreeMap<Long, Set<Vec3>> recentlyKilledZealots = new TreeMap<>();
+    @Getter private final TreeMap<Long, Set<Vec3>> recentlyKilledZealots = new TreeMap<>();
 
-    @SubscribeEvent
+    @InvokeEvent
     public void onDeath(LivingDeathEvent e) {
-        if (e.entity instanceof EntityEnderman) {
-            if (countedEndermen.remove(e.entity.getUniqueID())) {
+        if (e.getEntity() instanceof EntityEnderman) {
+            if (countedEndermen.remove(e.getEntity().getUniqueID())) {
                 main.getPersistentValues().addKill();
                 EndstoneProtectorManager.onKill();
             } else if (main.getUtils().isOnSkyblock() && main.getConfigValues().isEnabled(Feature.ZEALOT_COUNTER_EXPLOSIVE_BOW_SUPPORT)) {
-                if (isZealot(e.entity)) {
+                if (isZealot(e.getEntity())) {
                     long now = System.currentTimeMillis();
                     if (recentlyKilledZealots.containsKey(now)) {
-                        recentlyKilledZealots.get(now).add(e.entity.getPositionVector());
+                        recentlyKilledZealots.get(now).add(e.getEntity().getPositionVector());
                     } else {
-                        recentlyKilledZealots.put(now, Sets.newHashSet(e.entity.getPositionVector()));
+                        recentlyKilledZealots.put(now, Sets.newHashSet(e.getEntity().getPositionVector()));
                     }
 
                     explosiveBowExplosions.keySet().removeIf((explosionTime) -> now - explosionTime > 150);
@@ -497,27 +462,17 @@
 
                     Vec3 explosionLocation = latestExplosion.getValue();
 
-//                    int possibleZealotsKilled = 1;
-//                    System.out.println("This means "+possibleZealotsKilled+" may have been killed...");
-//                    int originalPossibleZealotsKilled = possibleZealotsKilled;
+                    Vec3 deathLocation = e.getEntity().getPositionVector();
 
-                    Vec3 deathLocation = e.entity.getPositionVector();
-
-                    double distance = explosionLocation.distanceTo(deathLocation);
-//                    System.out.println("Distance was "+distance+"!");
                     if (explosionLocation.distanceTo(deathLocation) < 4.6) {
-//                        possibleZealotsKilled--;
-
                         main.getPersistentValues().addKill();
                         EndstoneProtectorManager.onKill();
                     }
-
-//                    System.out.println((originalPossibleZealotsKilled-possibleZealotsKilled)+" zealots were actually killed...");
                 }
             }
         }
 
-        NPCUtils.getNpcLocations().remove(e.entity.getUniqueID());
+        NPCUtils.getNpcLocations().remove(e.getEntity().getUniqueID());
     }
 
     public boolean isZealot(Entity enderman) {
@@ -532,32 +487,29 @@
     /**
      * The main timer for the magma boss checker.
      */
-    @SubscribeEvent()
-    public void onClientTickMagma(TickEvent.ClientTickEvent e) {
-        if (e.phase == TickEvent.Phase.START) {
-            Minecraft mc = Minecraft.getMinecraft();
-            if (main.getConfigValues().isEnabled(Feature.MAGMA_WARNING) && main.getUtils().isOnSkyblock()) {
-                if (mc != null && mc.theWorld != null) {
-                    if (magmaTick % 5 == 0) {
-                        boolean foundBoss = false;
-                        long currentTime = System.currentTimeMillis();
-                        for (Entity entity : mc.theWorld.loadedEntityList) { // Loop through all the entities.
-                            if (entity instanceof EntityMagmaCube) {
-                                EntitySlime magma = (EntitySlime) entity;
-                                if (magma.getSlimeSize() > 10) { // Find a big magma boss
-                                    foundBoss = true;
-                                    if ((lastBoss == -1 || System.currentTimeMillis() - lastBoss > 1800000)) {
-                                        lastBoss = System.currentTimeMillis();
-                                        main.getRenderListener().setTitleFeature(Feature.MAGMA_WARNING); // Enable warning and disable again in four seconds.
-                                        magmaTick = 16; // so the sound plays instantly
-                                        main.getScheduler().schedule(Scheduler.CommandType.RESET_TITLE_FEATURE, main.getConfigValues().getWarningSeconds());
-//                                logServer(mc);
-                                    }
-                                    magmaAccuracy = EnumUtils.MagmaTimerAccuracy.SPAWNED;
-                                    if (currentTime - lastBossSpawnPost > 300000) {
-                                        lastBossSpawnPost = currentTime;
-                                        main.getUtils().sendInventiveTalentPingRequest(EnumUtils.MagmaEvent.BOSS_SPAWN);
-                                    }
+    @InvokeEvent
+    public void onClientTickMagma(TickEvent e) {
+        Minecraft mc = Minecraft.getMinecraft();
+        if (main.getConfigValues().isEnabled(Feature.MAGMA_WARNING) && main.getUtils().isOnSkyblock()) {
+            if (mc != null && mc.theWorld != null) {
+                if (magmaTick % 5 == 0) {
+                    boolean foundBoss = false;
+                    long currentTime = System.currentTimeMillis();
+                    for (Entity entity : mc.theWorld.loadedEntityList) { // Loop through all the entities.
+                        if (entity instanceof EntityMagmaCube) {
+                            EntitySlime magma = (EntitySlime) entity;
+                            if (magma.getSlimeSize() > 10) { // Find a big magma boss
+                                foundBoss = true;
+                                if ((lastBoss == -1 || System.currentTimeMillis() - lastBoss > 1800000)) {
+                                    lastBoss = System.currentTimeMillis();
+                                    main.getRenderListener().setTitleFeature(Feature.MAGMA_WARNING); // Enable warning and disable again in four seconds.
+                                    magmaTick = 16; // so the sound plays instantly
+                                    main.getScheduler().schedule(Scheduler.CommandType.RESET_TITLE_FEATURE, main.getConfigValues().getWarningSeconds());
+                                }
+                                magmaAccuracy = EnumUtils.MagmaTimerAccuracy.SPAWNED;
+                                if (currentTime - lastBossSpawnPost > 300000) {
+                                    lastBossSpawnPost = currentTime;
+                                    main.getUtils().sendInventiveTalentPingRequest(EnumUtils.MagmaEvent.BOSS_SPAWN);
                                 }
                             }
                         }
@@ -592,12 +544,12 @@
     }
 
     // Between these two coordinates is the whole "arena" area where all the magmas and stuff are.
-    private static AxisAlignedBB magmaBossSpawnArea = new AxisAlignedBB(-244, 0, -566, -379, 255, -635);
-    @Getter private TreeMap<Long, Vec3> explosiveBowExplosions = new TreeMap<>();
+    private static final AxisAlignedBB magmaBossSpawnArea = new AxisAlignedBB(-244, 0, -566, -379, 255, -635);
+    @Getter private final TreeMap<Long, Vec3> explosiveBowExplosions = new TreeMap<>();
 
-    @SubscribeEvent()
-    public void onEntitySpawn(EntityEvent.EnteringChunk e) {
-        Entity entity = e.entity;
+    @InvokeEvent
+    public void onEntitySpawn(EntityEnterChunkEvent e) {
+        Entity entity = e.getEntity();
 
         if (main.getUtils().isOnSkyblock() && main.getConfigValues().isEnabled(Feature.ZEALOT_COUNTER_EXPLOSIVE_BOW_SUPPORT) && entity instanceof EntityArrow) {
             EntityArrow arrow = (EntityArrow)entity;
@@ -608,15 +560,14 @@
 
                 AxisAlignedBB playerRadius = new AxisAlignedBB(p.posX - 3, p.posY - 3, p.posZ - 3, p.posX + 3, p.posY + 3, p.posZ + 3);
                 if (playerRadius.isVecInside(arrow.getPositionVector())) {
-
-//                    System.out.println("Spawned explosive arrow!");
                     main.getNewScheduler().scheduleRepeatingTask(new SkyblockRunnable() {
                         @Override
                         public void run() {
-                            if (arrow.isDead || arrow.isCollided || arrow.inGround) {
+                            final boolean inGround = (boolean) Reflector.getFieldValue(EntityArrow.class, arrow, "inGround");
+
+                            if (arrow.isDead || arrow.isCollided || inGround) {
                                 cancel();
 
-//                                System.out.println("Arrow is done, added an explosion!");
                                 Vec3 explosionLocation = new Vec3(arrow.posX, arrow.posY, arrow.posZ);
                                 explosiveBowExplosions.put(System.currentTimeMillis(), explosionLocation);
 
@@ -627,22 +578,14 @@
                                 }
                                 if (filteredRecentlyKilledZealots.isEmpty()) return;
 
-//                                int possibleZealotsKilled = filteredRecentlyKilledZealots.size();
-//                                System.out.println("This means "+possibleZealotsKilled+" may have been killed...");
-//                                int originalPossibleZealotsKilled = possibleZealotsKilled;
-
                                 for (Vec3 zealotDeathLocation : filteredRecentlyKilledZealots) {
                                     double distance = explosionLocation.distanceTo(zealotDeathLocation);
                                     System.out.println("Distance was "+distance+"!");
                                     if (distance < 4.6) {
-//                                        possibleZealotsKilled--;
-
                                         main.getPersistentValues().addKill();
                                         EndstoneProtectorManager.onKill();
                                     }
                                 }
-
-//                                System.out.println((originalPossibleZealotsKilled-possibleZealotsKilled)+" zealots were actually killed...");
                             }
                         }
                     }, 0, 1);
@@ -653,8 +596,8 @@
         if (main.getUtils().getLocation() == Location.BLAZING_FORTRESS) {
             if (magmaBossSpawnArea.isVecInside(new Vec3(entity.posX, entity.posY, entity.posZ))) { // timers will trigger if 15 magmas/8 blazes spawn in the box within a 4 second time period
                 long currentTime = System.currentTimeMillis();
-                if (e.entity instanceof EntityMagmaCube) {
-                    if (!recentlyLoadedChunks.contains(new IntPair(e.newChunkX, e.newChunkZ)) && entity.ticksExisted == 0) {
+                if (entity instanceof EntityMagmaCube) {
+                    if (!recentlyLoadedChunks.contains(new IntPair(e.getChunk().xPosition, e.getChunk().zPosition)) && entity.ticksExisted == 0) {
                         recentMagmaCubes++;
                         main.getScheduler().schedule(Scheduler.CommandType.SUBTRACT_MAGMA_COUNT, 4);
                         if (recentMagmaCubes >= 17) {
@@ -666,8 +609,8 @@
                             }
                         }
                     }
-                } else if (e.entity instanceof EntityBlaze) {
-                    if (!recentlyLoadedChunks.contains(new IntPair(e.newChunkX, e.newChunkZ)) && entity.ticksExisted == 0) {
+                } else if (e.getEntity() instanceof EntityBlaze) {
+                    if (!recentlyLoadedChunks.contains(new IntPair(e.getChunk().xPosition, e.getChunk().zPosition)) && entity.ticksExisted == 0) {
                         recentBlazes++;
                         main.getScheduler().schedule(Scheduler.CommandType.SUBTRACT_BLAZE_COUNT, 4);
                         if (recentBlazes >= 10) {
@@ -684,23 +627,16 @@
         }
     }
 
-    @SubscribeEvent()
-    public void onEnderTeleport(EnderTeleportEvent e) {
-        if (main.getUtils().isOnSkyblock() && main.getConfigValues().isEnabled(Feature.DISABLE_ENDERMAN_TELEPORTATION_EFFECT)) {
-            e.setCanceled(true);
-        }
-    }
-
     /**
      * Modifies item tooltips and activates the copy item nbt feature
      */
-    @SubscribeEvent()
+    @InvokeEvent
     public void onItemTooltip(ItemTooltipEvent e) {
-        ItemStack hoveredItem = e.itemStack;
-        if (e.toolTip != null && main.getUtils().isOnSkyblock()) {
+        ItemStack hoveredItem = e.getStack();
+        if (e.getTooltip() != null && main.getUtils().isOnSkyblock()) {
             if (main.getConfigValues().isEnabled(Feature.HIDE_GREY_ENCHANTS)) {
                 for (int i = 1; i <= 3; i++) { // only a max of 2 gray enchants are possible
-                    if (i >= e.toolTip.size()) continue; // out of bounds
+                    if (i >= e.getTooltip().size()) continue; // out of bounds
 
                     GuiScreen gui = Minecraft.getMinecraft().currentScreen;
                     if (gui instanceof GuiChest) {
@@ -712,10 +648,12 @@
                             }
                         }
                     }
-                    String line = e.toolTip.get(i);
+                    String line = e.getTooltip().get(i);
                     if (!line.startsWith("§5§o§9") && (line.contains("Respiration") || line.contains("Aqua Affinity")
                             || line.contains("Depth Strider") || line.contains("Efficiency"))) {
-                        e.toolTip.remove(line);
+                        List<String> l = e.getTooltip();
+                        l.remove(line);
+                        e.setTooltip(l);
                         i--;
                     }
                 }
@@ -725,11 +663,11 @@
                 // Anvil Uses ~ original done by Dahn#6036
                 int anvilUses = main.getUtils().getNBTInteger(hoveredItem, "ExtraAttributes", "anvil_uses");
                 if (anvilUses != -1) {
-                    int insertAt = e.toolTip.size();
+                    int insertAt = e.getTooltip().size();
                     insertAt--; // 1 line for the rarity
                     if (Minecraft.getMinecraft().gameSettings.advancedItemTooltips) {
                         insertAt -= 2; // 1 line for the item name, and 1 line for the nbt
-                        if (e.itemStack.isItemDamaged()) {
+                        if (e.getStack().isItemDamaged()) {
                             insertAt--; // 1 line for damage
                         }
                     }
@@ -738,14 +676,18 @@
                         anvilUses -= hotPotatoCount;
                     }
                     if (anvilUses > 0) {
-                        e.toolTip.add(insertAt, Message.MESSAGE_ANVIL_USES.getMessage(String.valueOf(anvilUses)));
+                        List<String> l = e.getTooltip();
+                        l.add(insertAt, Message.MESSAGE_ANVIL_USES.getMessage(String.valueOf(anvilUses)));
+                        e.setTooltip(l);
                     }
                 }
             }
 
             if (main.getConfigValues().isEnabled(Feature.REPLACE_ROMAN_NUMERALS_WITH_NUMBERS)) {
-                for (int i = 0; i < e.toolTip.size(); i++) {
-                    e.toolTip.set(i, RomanNumeralParser.replaceNumeralsWithIntegers(e.toolTip.get(i)));
+                for (int i = 0; i < e.getTooltip().size(); i++) {
+                    List<String> l = e.getTooltip();
+                    l.set(i, RomanNumeralParser.replaceNumeralsWithIntegers(e.getTooltip().get(i)));
+                    e.setTooltip(l);
                 }
             }
 
@@ -755,9 +697,9 @@
                 int enchantStartIndex = -1;
                 int enchantEndIndex = -1;
 
-                for (int i = 0; i < e.toolTip.size(); i++) {
-                    if (ENCHANTMENT_TOOLTIP_PATTERN.matcher(e.toolTip.get(i)).matches()) {
-                        String line = TextUtils.stripColor(e.toolTip.get(i));
+                for (int i = 0; i < e.getTooltip().size(); i++) {
+                    if (ENCHANTMENT_TOOLTIP_PATTERN.matcher(e.getTooltip().get(i)).matches()) {
+                        String line = TextUtils.stripColor(e.getTooltip().get(i));
                         int comma = line.indexOf(',');
                         if (comma < 0 || line.length() <= comma + 2) {
                             enchantments.add(line);
@@ -773,7 +715,9 @@
                 }
 
                 if (enchantments.size() > 4) {
-                    e.toolTip.subList(enchantStartIndex, enchantEndIndex).clear(); // Remove old enchantments
+                    List<String> l = e.getTooltip();
+                    l.subList(enchantStartIndex, enchantEndIndex).clear(); // Remove old enchantments
+                    e.setTooltip(l);
                     main.getUtils().reorderEnchantmentList(enchantments);
                     int columns = enchantments.size() < 15 ? 2 : 3;
                     for (int i = 0; !enchantments.isEmpty(); i++) {
@@ -786,17 +730,21 @@
                             enchantments.remove(0);
                         }
                         sb.setLength(sb.length() - 2);
-                        e.toolTip.add(enchantStartIndex + i, sb.toString());
+                        l = e.getTooltip();
+                        l.add(enchantStartIndex + i, sb.toString());
+                        e.setTooltip(l);
                     }
                 }
             }
 
             // Append Skyblock Item ID to end of tooltip if in developer mode
-            if (main.isDevMode() && e.showAdvancedItemTooltips) {
-                String itemId = ItemUtils.getSkyBlockItemID(e.itemStack);
+            if (main.isDevMode()) {
+                String itemId = ItemUtils.getSkyBlockItemID(e.getStack());
 
                 if (itemId != null) {
-                    e.toolTip.add(EnumChatFormatting.DARK_GRAY + "Skyblock ID: " + itemId);
+                    List<String> l = e.getTooltip();
+                    l.add(EnumChatFormatting.DARK_GRAY + "Skyblock ID: " + itemId);
+                    e.setTooltip(l);
                 }
             }
 
@@ -807,7 +755,9 @@
 
                         if (extraAttributesTag != null) {
                             if (extraAttributesTag.hasKey("bossId") && extraAttributesTag.hasKey("spawnedFor")) {
-                                e.toolTip.add("§c§lBROKEN FRAGMENT§r");
+                                List<String> l = e.getTooltip();
+                                l.add("§c§lBROKEN FRAGMENT§r");
+                                e.setTooltip(l);
                             }
                         }
                     }
@@ -816,18 +766,18 @@
         }
     }
 
-    @SubscribeEvent
+    @InvokeEvent
     public void onGuiOpen(GuiOpenEvent e) {
-        if (e.gui == null && GuiChest.class.equals(lastOpenedInventory)) {
+        if (e.getGui() == null && GuiChest.class.equals(lastOpenedInventory)) {
             lastClosedInv = System.currentTimeMillis();
             lastOpenedInventory = null;
         }
-        if (e.gui != null) {
-            lastOpenedInventory = e.gui.getClass();
+        if (e.getGui() != null) {
+            lastOpenedInventory = e.getGui().getClass();
 
-            if (e.gui instanceof GuiChest) {
+            if (e.getGui() instanceof GuiChest) {
                 Minecraft mc = Minecraft.getMinecraft();
-                IInventory chestInventory = ((GuiChest)e.gui).lowerChestInventory;
+                IInventory chestInventory = (IInventory) Reflector.getFieldValue(GuiChest.class, e.getGui(), "lowerChestInventory");
                 if (chestInventory.hasCustomName()) {
                     if (chestInventory.getDisplayName().getUnformattedText().contains("Backpack")) {
                         if (ThreadLocalRandom.current().nextInt(0, 2) == 0) {
@@ -841,19 +791,12 @@
         }
     }
 
-    /**
-     * This method handles key presses while the player is in-game.
-     * For handling of key presses while a GUI (e.g. chat, pause menu, F3) is open,
-     * see {@link GuiScreenListener#onKeyInput(GuiScreenEvent.KeyboardInputEvent)}
-     *
-     * @param e the {@code KeyInputEvent}
-     */
-    @SubscribeEvent(receiveCanceled = true)
-    public void onKeyInput(InputEvent.KeyInputEvent e) {
-        if (main.getOpenSettingsKey().isPressed()) {
+    @InvokeEvent
+    public void onKeyInput(KeypressEvent e) {
+        if (main.getOpenSettingsKey().getKeyCode() == e.getKey()) {
             main.getUtils().setFadingIn(true);
             main.getRenderListener().setGuiToOpen(EnumUtils.GUIType.MAIN, 1, EnumUtils.GuiTab.MAIN);
-        } else if (main.getOpenEditLocationsKey().isPressed()) {
+        } else if (main.getOpenEditLocationsKey().getKeyCode() == e.getKey()) {
             main.getUtils().setFadingIn(false);
             main.getRenderListener().setGuiToOpen(EnumUtils.GUIType.EDIT_LOCATIONS, 0, null);
         } else if (Keyboard.getEventKey() == DevUtils.DEV_KEY && Keyboard.getEventKeyState()) {
Index: src/main/resources/data.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/data.json	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/resources/data.json	(date 1603996356256)
@@ -2,8 +2,6 @@
   "bannerImageURL": null,
   "bannerLink": null,
 
-  "latestVersion": "1.5.4",
-  "latestBeta": "1.6.0-beta.6",
   "videoLink": "https://youtu.be/_BZMJm6JD4Q",
   "directDownload": "https://biscuit.codes/mods/skyblockaddons/downloadversion/?v=1.5.4",
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/PlayerControllerMPTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/PlayerControllerMPTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/PlayerControllerMPTransformer.java	(date 1603996355444)
@@ -3,12 +3,11 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public class PlayerControllerMPTransformer implements ITransformer {
 
-
     /**
      * {@link net.minecraft.client.multiplayer.PlayerControllerMP}
      */
Index: src/main/java/codes/biscuit/skyblockaddons/listeners/RenderListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/listeners/RenderListener.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/listeners/RenderListener.java	(date 1603996355897)
@@ -1,5 +1,12 @@
 package codes.biscuit.skyblockaddons.listeners;
 
+import cc.hyperium.Hyperium;
+import cc.hyperium.event.InvokeEvent;
+import cc.hyperium.event.Priority;
+import cc.hyperium.event.client.TickEvent;
+import cc.hyperium.event.render.RenderHUDEvent;
+import cc.hyperium.handlers.handlers.GuiDisplayHandler;
+import cc.hyperium.mixinsimp.gui.HyperiumGuiIngame;
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.core.Attribute;
 import codes.biscuit.skyblockaddons.core.Feature;
@@ -19,8 +26,6 @@
 import codes.biscuit.skyblockaddons.gui.SkyblockAddonsGui;
 import codes.biscuit.skyblockaddons.gui.buttons.ButtonLocation;
 import codes.biscuit.skyblockaddons.misc.ChromaManager;
-import codes.biscuit.skyblockaddons.misc.Updater;
-import codes.biscuit.skyblockaddons.misc.scheduler.Scheduler;
 import codes.biscuit.skyblockaddons.utils.EnumUtils;
 import codes.biscuit.skyblockaddons.utils.TextUtils;
 import codes.biscuit.skyblockaddons.utils.ColorCode;
@@ -33,7 +38,6 @@
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.RenderHelper;
 import net.minecraft.entity.Entity;
-import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.item.EntityArmorStand;
 import net.minecraft.entity.item.EntityItem;
 import net.minecraft.init.Items;
@@ -41,12 +45,6 @@
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.util.ResourceLocation;
-import net.minecraftforge.client.GuiIngameForge;
-import net.minecraftforge.client.event.RenderGameOverlayEvent;
-import net.minecraftforge.client.event.RenderLivingEvent;
-import net.minecraftforge.fml.client.GuiNotification;
-import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
-import net.minecraftforge.fml.common.gameevent.TickEvent;
 
 import java.awt.*;
 import java.math.BigDecimal;
@@ -77,13 +75,11 @@
     private static ItemStack NETHER_STAR;
     private static ItemStack WARP_SKULL;
 
-    private SkyblockAddons main = SkyblockAddons.getInstance();
+    private final SkyblockAddons main = SkyblockAddons.getInstance();
 
     @Getter @Setter private boolean predictHealth;
     @Getter @Setter private boolean predictMana;
 
-    @Setter private boolean updateMessageDisplayed;
-
     private Feature subtitleFeature;
     @Getter @Setter private Feature titleFeature;
 
@@ -103,63 +99,13 @@
     /**
      * Render overlays and warnings for clients without labymod.
      */
-    @SubscribeEvent()
-    public void onRenderRegular(RenderGameOverlayEvent.Post e) {
-        if ((!main.isUsingLabymod() || Minecraft.getMinecraft().ingameGUI instanceof GuiIngameForge)) {
-            if (e.type == RenderGameOverlayEvent.ElementType.EXPERIENCE || e.type == RenderGameOverlayEvent.ElementType.JUMPBAR) {
-                if (main.getUtils().isOnSkyblock()) {
-                    renderOverlays();
-                    renderWarnings(e.resolution);
-                } else {
-                    renderTimersOnly();
-                }
-                drawUpdateMessage();
-            }
-        }
-    }
-
-    /**
-     * Render overlays and warnings for clients with labymod.
-     * Labymod creates its own ingame gui and replaces the forge one, and changes the events that are called.
-     * This is why the above method can't work for both.
-     */
-    @SubscribeEvent()
-    public void onRenderLabyMod(RenderGameOverlayEvent e) {
-        if (e.type == null && main.isUsingLabymod()) {
-            if (main.getUtils().isOnSkyblock()) {
-                renderOverlays();
-                renderWarnings(e.resolution);
-            } else {
-                renderTimersOnly();
-            }
-            drawUpdateMessage();
-        }
-    }
-
-    @SubscribeEvent()
-    public void onRenderLiving(RenderLivingEvent.Specials.Pre<EntityLivingBase> e) {
-        Entity entity = e.entity;
-        if (entity.hasCustomName()) {
-            if (main.getConfigValues().isEnabled(Feature.MINION_DISABLE_LOCATION_WARNING)) {
-                if (entity.getCustomNameTag().startsWith("§cThis location isn't perfect! :(")) {
-                    e.setCanceled(true);
-                }
-                if (entity.getCustomNameTag().startsWith("§c/!\\")) {
-                    for (Entity listEntity : Minecraft.getMinecraft().theWorld.loadedEntityList) {
-                        if (listEntity.hasCustomName() && listEntity.getCustomNameTag().startsWith("§cThis location isn't perfect! :(") &&
-                                listEntity.posX == entity.posX && listEntity.posZ == entity.posZ && listEntity.posY + 0.375 == entity.posY) {
-                            e.setCanceled(true);
-                            break;
-                        }
-                    }
-                }
-            }
-
-            if (main.getConfigValues().isEnabled(Feature.HIDE_SVEN_PUP_NAMETAGS)) {
-                if (entity instanceof EntityArmorStand && entity.hasCustomName() && entity.getCustomNameTag().contains("Sven Pup")) {
-                    e.setCanceled(true);
-                }
-            }
+    @InvokeEvent
+    public void onRenderRegular(RenderHUDEvent e) {
+        if (main.getUtils().isOnSkyblock()) {
+            renderOverlays();
+            renderWarnings(new ScaledResolution(Minecraft.getMinecraft()));
+        } else {
+            renderTimersOnly();
         }
     }
 
@@ -168,7 +114,7 @@
      */
     private void renderTimersOnly() {
         Minecraft mc = Minecraft.getMinecraft();
-        if (!(mc.currentScreen instanceof LocationEditGui) && !(mc.currentScreen instanceof GuiNotification)) {
+        if (!(mc.currentScreen instanceof LocationEditGui)) {
             GlStateManager.disableBlend();
             if (main.getConfigValues().isEnabled(Feature.MAGMA_BOSS_TIMER) && main.getConfigValues().isEnabled(Feature.SHOW_MAGMA_TIMER_IN_OTHER_GAMES) &&
                     main.getPlayerListener().getMagmaAccuracy() != EnumUtils.MagmaTimerAccuracy.NO_DATA) {
@@ -298,7 +244,7 @@
      */
     private void renderOverlays() {
         Minecraft mc = Minecraft.getMinecraft();
-        if (!(mc.currentScreen instanceof LocationEditGui) && !(mc.currentScreen instanceof GuiNotification)) {
+        if (!(mc.currentScreen instanceof LocationEditGui)) {
             GlStateManager.disableBlend();
 
             for (Feature feature : Feature.getGuiFeatures()) {
@@ -459,37 +405,6 @@
         }
     }
 
-    /**
-     * Renders the messages from the SkyblockAddons Updater
-     */
-    private void drawUpdateMessage() {
-        Updater updater = main.getUpdater();
-        String message = updater.getMessageToRender();
-
-        if (updater.hasUpdate() && message != null && !updateMessageDisplayed) {
-            Minecraft mc = Minecraft.getMinecraft();
-            String[] textList = main.getUtils().wrapSplitText(message, 36);
-
-            int halfWidth = new ScaledResolution(mc).getScaledWidth() / 2;
-            Gui.drawRect(halfWidth - 110, 20, halfWidth + 110, 53 + textList.length * 10, main.getUtils().getDefaultBlue(140));
-            String title = SkyblockAddons.MOD_NAME;
-            GlStateManager.pushMatrix();
-            float scale = 1.5F;
-            GlStateManager.scale(scale, scale, 1);
-            main.getUtils().drawCenteredString(title, (int) (halfWidth / scale), (int) (30 / scale), ColorCode.WHITE.getRGB());
-            GlStateManager.popMatrix();
-            int y = 45;
-            for (String line : textList) {
-                main.getUtils().drawCenteredString(line, halfWidth, y, ColorCode.WHITE.getRGB());
-                y += 10;
-            }
-
-            main.getScheduler().schedule(Scheduler.CommandType.ERASE_UPDATE_MESSAGE, 10);
-
-            main.getUpdater().sendUpdateMessage();
-        }
-    }
-
     /**
      * This renders a bar for the skeleton hat bones bar.
      */
@@ -1221,7 +1136,7 @@
         GlStateManager.disableRescaleNormal();
     }
 
-    private static List<ItemDiff> DUMMY_PICKUP_LOG = new ArrayList<>(Arrays.asList(new ItemDiff(ColorCode.DARK_PURPLE + "Forceful Ember Chestplate", 1),
+    private static final List<ItemDiff> DUMMY_PICKUP_LOG = new ArrayList<>(Arrays.asList(new ItemDiff(ColorCode.DARK_PURPLE + "Forceful Ember Chestplate", 1),
             new ItemDiff("Boat", -1), new ItemDiff(ColorCode.BLUE + "Aspect of the End", 1)));
 
     public void drawItemPickupLog(float scale, ButtonLocation buttonLocation) {
@@ -1392,41 +1307,40 @@
         return main.getUtils().getAttributes().get(attribute).getValue();
     }
 
-    @SubscribeEvent()
-    public void onRenderRemoveBars(RenderGameOverlayEvent.Pre e) {
-        if (e.type == RenderGameOverlayEvent.ElementType.ALL) {
-            if (main.getUtils().isOnSkyblock()) {
-                if (main.getConfigValues().isEnabled(Feature.HIDE_FOOD_ARMOR_BAR)) {
-                    GuiIngameForge.renderFood = false;
-                    GuiIngameForge.renderArmor = false;
-                }
-                if (main.getConfigValues().isEnabled(Feature.HIDE_HEALTH_BAR)) {
-                    GuiIngameForge.renderHealth = false;
-                }
-                if (main.getConfigValues().isEnabled(Feature.HIDE_PET_HEALTH_BAR)) {
-                    GuiIngameForge.renderHealthMount = false;
-                }
-            } else {
-                if (main.getConfigValues().isEnabled(Feature.HIDE_HEALTH_BAR)) {
-                    GuiIngameForge.renderHealth = true;
-                }
-                if (main.getConfigValues().isEnabled(Feature.HIDE_FOOD_ARMOR_BAR)) {
-                    GuiIngameForge.renderArmor = true;
-                }
+    @InvokeEvent(priority = Priority.HIGH)
+    public void onRenderRemoveBars(RenderHUDEvent e) {
+        if (main.getUtils().isOnSkyblock()) {
+            if (main.getConfigValues().isEnabled(Feature.HIDE_FOOD_ARMOR_BAR)) {
+                HyperiumGuiIngame.renderFood = false;
+                HyperiumGuiIngame.renderArmor = false;
+            }
+            if (main.getConfigValues().isEnabled(Feature.HIDE_HEALTH_BAR)) {
+                HyperiumGuiIngame.renderHealth = false;
+            }
+            if (main.getConfigValues().isEnabled(Feature.HIDE_PET_HEALTH_BAR)) {
+                HyperiumGuiIngame.renderHealthMount = false;
+            }
+        } else {
+            if (main.getConfigValues().isEnabled(Feature.HIDE_HEALTH_BAR)) {
+                HyperiumGuiIngame.renderHealth = true;
+            }
+            if (main.getConfigValues().isEnabled(Feature.HIDE_FOOD_ARMOR_BAR)) {
+                HyperiumGuiIngame.renderArmor = true;
             }
         }
     }
 
-    @SubscribeEvent()
-    public void onRender(TickEvent.RenderTickEvent e) {
+    @InvokeEvent
+    public void onRender(TickEvent e) {
+        final GuiDisplayHandler g = Hyperium.INSTANCE.getHandlers().getGuiDisplayHandler();
         if (guiToOpen == EnumUtils.GUIType.MAIN) {
-            Minecraft.getMinecraft().displayGuiScreen(new SkyblockAddonsGui(guiPageToOpen, guiTabToOpen));
+            g.setDisplayNextTick(new SkyblockAddonsGui(guiPageToOpen, guiTabToOpen));
         } else if (guiToOpen == EnumUtils.GUIType.EDIT_LOCATIONS) {
-            Minecraft.getMinecraft().displayGuiScreen(new LocationEditGui(guiPageToOpen, guiTabToOpen));
+            g.setDisplayNextTick(new LocationEditGui(guiPageToOpen, guiTabToOpen));
         } else if (guiToOpen == EnumUtils.GUIType.SETTINGS) {
-            Minecraft.getMinecraft().displayGuiScreen(new SettingsGui(guiFeatureToOpen, 1, guiPageToOpen, guiTabToOpen, guiFeatureToOpen.getSettings()));
+            g.setDisplayNextTick(new SettingsGui(guiFeatureToOpen, 1, guiPageToOpen, guiTabToOpen, guiFeatureToOpen.getSettings()));
         } else if (guiToOpen == EnumUtils.GUIType.WARP) {
-            Minecraft.getMinecraft().displayGuiScreen(new IslandWarpGui());
+            g.setDisplayNextTick(new IslandWarpGui());
         }
         guiToOpen = null;
     }
Index: src/main/java/codes/biscuit/skyblockaddons/asm/InventoryPlayerTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/InventoryPlayerTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/InventoryPlayerTransformer.java	(date 1603996355397)
@@ -3,10 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.ClassNode;
-import org.objectweb.asm.tree.MethodInsnNode;
-import org.objectweb.asm.tree.MethodNode;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public class InventoryPlayerTransformer implements ITransformer {
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/RendererLivingEntityTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/RendererLivingEntityTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/RendererLivingEntityTransformer.java	(date 1603996355444)
@@ -3,11 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.AbstractInsnNode;
-import org.objectweb.asm.tree.ClassNode;
-import org.objectweb.asm.tree.MethodInsnNode;
-import org.objectweb.asm.tree.MethodNode;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/listeners/NetworkListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/listeners/NetworkListener.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/listeners/NetworkListener.java	(date 1603996355866)
@@ -1,14 +1,13 @@
 package codes.biscuit.skyblockaddons.listeners;
 
 import codes.biscuit.skyblockaddons.SkyblockAddons;
-import codes.biscuit.skyblockaddons.core.Feature;
 import codes.biscuit.skyblockaddons.events.SkyblockJoinedEvent;
 import codes.biscuit.skyblockaddons.events.SkyblockLeftEvent;
-import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
-import net.minecraftforge.fml.common.network.FMLNetworkEvent;
 import org.apache.logging.log4j.Logger;
 
-import static net.minecraftforge.common.MinecraftForge.EVENT_BUS;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.InvokeEvent;
+import cc.hyperium.event.network.server.ServerLeaveEvent;
 
 public class NetworkListener {
     private final SkyblockAddons main;
@@ -19,27 +18,21 @@
         logger = main.getLogger();
     }
 
-    @SubscribeEvent
-    public void onDisconnect(FMLNetworkEvent.ClientDisconnectionFromServerEvent event) {
+    @InvokeEvent
+    public void onLeave(ServerLeaveEvent event) {
         // Leave Skyblock when the player disconnects
-        EVENT_BUS.post(new SkyblockLeftEvent());
+        EventBus.INSTANCE.post(new SkyblockLeftEvent());
     }
 
-    @SubscribeEvent
+    @InvokeEvent
     public void onSkyblockJoined(SkyblockJoinedEvent event) {
         logger.info("Joined Skyblock");
         main.getUtils().setOnSkyblock(true);
-        if (main.getConfigValues().isEnabled(Feature.DISCORD_RPC)) {
-            main.getDiscordRPCManager().start();
-        }
     }
 
-    @SubscribeEvent
+    @InvokeEvent
     public void onSkyblockLeft(SkyblockLeftEvent event) {
         logger.info("Left Skyblock");
         main.getUtils().setOnSkyblock(false);
-        if (main.getDiscordRPCManager().isActive()) {
-            main.getDiscordRPCManager().stop();
-        }
     }
 }
\ No newline at end of file
Index: src/main/java/codes/biscuit/skyblockaddons/asm/MinecraftTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/MinecraftTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/MinecraftTransformer.java	(date 1603996355413)
@@ -4,8 +4,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerField;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/features/tabtimers/TabEffectManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/features/tabtimers/TabEffectManager.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/features/tabtimers/TabEffectManager.java	(date 1604000696340)
@@ -1,5 +1,6 @@
 package codes.biscuit.skyblockaddons.features.tabtimers;
 
+import codes.biscuit.skyblockaddons.Reflector;
 import codes.biscuit.skyblockaddons.SkyblockAddons;
 import codes.biscuit.skyblockaddons.core.Feature;
 import codes.biscuit.skyblockaddons.gui.buttons.ButtonLocation;
@@ -7,8 +8,8 @@
 import codes.biscuit.skyblockaddons.utils.TextUtils;
 import lombok.Getter;
 import net.minecraft.client.Minecraft;
+import net.minecraft.client.gui.GuiPlayerTabOverlay;
 import net.minecraft.util.IChatComponent;
-import net.minecraftforge.fml.common.gameevent.TickEvent;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -88,13 +89,12 @@
     }
 
     /**
-     * Called by {@link codes.biscuit.skyblockaddons.listeners.PlayerListener#onTick(TickEvent.ClientTickEvent)} every second
      * to update the list of current effect timers.
      */
     public void updatePotionEffects() {
         potionTimers.clear();
         powerupTimers.clear();
-        IChatComponent tabFooterChatComponent = Minecraft.getMinecraft().ingameGUI.getTabList().footer;
+        IChatComponent tabFooterChatComponent = (IChatComponent) Reflector.getFieldValue(GuiPlayerTabOverlay.class, Minecraft.getMinecraft().ingameGUI.getTabList(), "footer");
 
         // Convert tab footer to a String
         StringBuilder tabFooterStringBuilder = new StringBuilder();
Index: src/main/java/codes/biscuit/skyblockaddons/asm/GuiScreenTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/GuiScreenTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/GuiScreenTransformer.java	(date 1603996355381)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public class GuiScreenTransformer implements ITransformer {
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/GuiChestTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/GuiChestTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/GuiChestTransformer.java	(date 1603996355350)
@@ -4,8 +4,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerField;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/RenderManagerTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/RenderManagerTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/RenderManagerTransformer.java	(date 1603996355460)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public class RenderManagerTransformer implements ITransformer {
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/ItemTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/ItemTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/ItemTransformer.java	(date 1603996355413)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/EntityLivingBaseTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/EntityLivingBaseTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/EntityLivingBaseTransformer.java	(date 1603996355319)
@@ -4,8 +4,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerField;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/GuiIngameMenuTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/GuiIngameMenuTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/GuiIngameMenuTransformer.java	(date 1603996355381)
@@ -4,8 +4,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerField;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/EntityPlayerSPTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/EntityPlayerSPTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/EntityPlayerSPTransformer.java	(date 1603996355319)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public class EntityPlayerSPTransformer implements ITransformer {
 
Index: src/main/java/codes/biscuit/skyblockaddons/features/backpacks/BackpackManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/features/backpacks/BackpackManager.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/features/backpacks/BackpackManager.java	(date 1603996355663)
@@ -9,7 +9,6 @@
 import net.minecraft.nbt.CompressedStreamTools;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
-import net.minecraftforge.common.util.Constants;
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
@@ -68,7 +67,7 @@
                     ItemStack[] items = new ItemStack[length];
                     if (bytes != null) {
                         NBTTagCompound nbtTagCompound = CompressedStreamTools.readCompressed(new ByteArrayInputStream(bytes));
-                        NBTTagList list = nbtTagCompound.getTagList("i", Constants.NBT.TAG_COMPOUND);
+                        NBTTagList list = nbtTagCompound.getTagList("i", 10);
 
                         if (list.tagCount() > length) {
                             length = list.tagCount();
Index: src/main/java/codes/biscuit/skyblockaddons/asm/EntityRendererTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/EntityRendererTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/EntityRendererTransformer.java	(date 1604000299614)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
@@ -38,18 +38,18 @@
                         }
                     }
                 }
-            } else if (TransformerMethod.getNightVisionBrightness.matches(methodNode)) {
+            }/* else if (TransformerMethod.getNightVisionBrightness.matches(methodNode)) {
 
-                // Objective:
-                // Find: Method head.
-                // Insert:   ReturnValue returnValue = new ReturnValue();
-                //           EntityPlayerSPHook.preventBlink(returnValue);
-                //           if (returnValue.isCancelled()) {
-                //               return 1.0F;
-                //           }
+            // Objective:
+            // Find: Method head.
+            // Insert:   ReturnValue returnValue = new ReturnValue();
+            //           EntityPlayerSPHook.preventBlink(returnValue);
+            //           if (returnValue.isCancelled()) {
+            //               return 1.0F;
+            //           }
 
-                methodNode.instructions.insertBefore(methodNode.instructions.getFirst(), insertNightVision());
-            }
+            methodNode.instructions.insertBefore(methodNode.instructions.getFirst(), insertNightVision());
+        }*/
         }
     }
 
@@ -63,6 +63,7 @@
         return list;
     }
 
+    /*
     private InsnList insertNightVision() {
         InsnList list = new InsnList();
 
@@ -86,5 +87,5 @@
         list.add(notCancelled);
 
         return list;
-    }
+    }*/
 }
Index: src/main/java/codes/biscuit/skyblockaddons/asm/MouseHelperTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/MouseHelperTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/MouseHelperTransformer.java	(date 1603996355428)
@@ -3,11 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.AbstractInsnNode;
-import org.objectweb.asm.tree.ClassNode;
-import org.objectweb.asm.tree.MethodInsnNode;
-import org.objectweb.asm.tree.MethodNode;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/GuiContainerTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/GuiContainerTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/GuiContainerTransformer.java	(date 1603996355350)
@@ -4,8 +4,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerField;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 import java.util.Iterator;
 
Index: src/main/java/codes/biscuit/skyblockaddons/asm/ModelEndermanTransformer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/codes/biscuit/skyblockaddons/asm/ModelEndermanTransformer.java	(revision c3d6b11fe147f2d92a69af279db203cd25083599)
+++ src/main/java/codes/biscuit/skyblockaddons/asm/ModelEndermanTransformer.java	(date 1603996355428)
@@ -3,8 +3,8 @@
 import codes.biscuit.skyblockaddons.asm.utils.TransformerClass;
 import codes.biscuit.skyblockaddons.asm.utils.TransformerMethod;
 import codes.biscuit.skyblockaddons.tweaker.transformer.ITransformer;
-import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.tree.*;
+import org.spongepowered.asm.lib.Opcodes;
+import org.spongepowered.asm.lib.tree.*;
 
 public class ModelEndermanTransformer implements ITransformer {
 
